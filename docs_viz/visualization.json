{
  "analysis": {
    "functions": [
      {
        "name": "empty_doc",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Empty documentation",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_simple_doc_comment",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "comment_text" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Simple documentation comment parser",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_doc_comment",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "comment_text" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Parse a single documentation comment",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_function_doc",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "func" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Extract documentation for a function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_all_docs",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Extract all documentation from analysis result",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "format_doc_as_html",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "doc" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Format documentation as HTML",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "format_doc_as_markdown",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "doc" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Convert documentation to markdown",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "build_call_graph",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Build call graph from analysis result",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "in_degree",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "graph", "function_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Calculate in-degree for a function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "out_degree",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "graph", "function_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Calculate out-degree for a function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "find_entry_points",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "graph", "function_map" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Find entry points",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_complexity_stats",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "functions" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Calculate complexity statistics",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "create_enhanced_call_graph",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Create enhanced call graph",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_dependencies",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "enhanced_graph", "function_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Get function dependencies",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_reverse_dependencies",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "enhanced_graph", "function_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Get reverse dependencies",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_function_metrics",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "enhanced_graph", "function_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Get function metrics",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "location_to_json",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "_loc" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Convert Location.t to JSON",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "doc_to_json",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "doc" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Convert parsed documentation to JSON",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "function_to_json",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "func", "docs_map" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Convert function info to JSON",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "enhanced_call_graph_to_json",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "enhanced_graph", "docs_map" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Convert enhanced call graph to JSON with metrics",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_mermaid_diagram",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "enhanced_graph", "max_complexity", "show_modules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Generate Mermaid diagram syntax",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_visualization_data",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Generate complete visualization data package",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "save_visualization_data",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "analysis", "output_file" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Save visualization data to file",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_source_data",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "filenames" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Generate source code data for viewer",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "export_complete_visualization",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "filenames", "output_dir" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Complete export function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_doc_attribute",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "attrs" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Extract documentation from attributes",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_complexity",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "expr" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Simple complexity calculation",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_calls",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "expr" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Extract function calls",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_parameters",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "pattern" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Simple parameter extraction",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "process_value_binding",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "module_path", "binding" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Process a value binding",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "analyze_structure_item",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "module_path", "item" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Analyze a structure item",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "analyze_file",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "filename" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Main analysis function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "analyze_files",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "filenames" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Analyze multiple files",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "find_callers",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "target_function", "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Find functions that call a specific function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "find_callees",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "source_function", "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Find functions called by a specific function",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_function_info",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "name", "analysis" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": "Get function information by name",
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "state_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_state",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_anniversary_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "anniversary_email_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_followup_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "followup_type_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_email_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "email_type_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_schedule_status",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "priority_of_email_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_error",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "email" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "state_from_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip_code" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "update_contact_state",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_anniversary_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "org_config", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_campaign_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "org_config", "campaign_instance", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_zip_code_valid",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "db_handle",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [ "ref" ],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "db_path",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [ "ref" ],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "set_db_path",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "path" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [set_db_path]: Sets the database file path for SQLite connections\n * \n * Purpose:\n *   Configures the SQLite database file location for all subsequent database\n *   operations, enabling environment-specific database configuration.\n * \n * Parameters:\n *   - path: String path to SQLite database file\n * \n * Returns:\n *   Unit (side effect: updates global database path reference)\n * \n * Business Logic:\n *   - Updates global database path configuration\n *   - Enables switching between development, test, and production databases\n *   - Must be called before database operations in different environments\n * \n * Usage Example:\n *   Called during application initialization to set environment-specific database\n * \n * Error Cases:\n *   - None expected (simple reference assignment)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_db_error",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_db_error]: Converts database error to human-readable string\n * \n * Purpose:\n *   Provides standardized error message formatting for database errors\n *   to enable consistent error reporting and debugging.\n * \n * Parameters:\n *   - db_error variant: Specific database error type\n * \n * Returns:\n *   String with formatted error message including error type\n * \n * Business Logic:\n *   - Categorizes errors for targeted debugging\n *   - Provides clear error context for troubleshooting\n *   - Enables consistent error handling across application\n * \n * Usage Example:\n *   Used in error reporting and logging throughout database operations\n * \n * Error Cases:\n *   - None expected (pure string formatting)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_db_connection",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "datetime_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "execute_sql_safe",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "sql" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "execute_sql_no_result",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "sql" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "batch_insert_with_prepared_statement",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "table_sql", "values_list" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_contact_row",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_contacts_in_scheduling_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "lookahead_days", "lookback_days" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_all_contacts",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_total_contact_count",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "clear_pre_scheduled_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "schedule_content_changed",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "existing_record" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [schedule_content_changed]: Intelligently compares schedule content to detect real changes\n * \n * Purpose:\n *   Core smart update logic that determines if email schedule content has actually\n *   changed, ignoring metadata to preserve audit trails and prevent unnecessary updates.\n * \n * Parameters:\n *   - existing_record: Existing schedule record from database\n *   - new_schedule: New schedule to compare against existing\n * \n * Returns:\n *   Boolean indicating if content has meaningfully changed\n * \n * Business Logic:\n *   - Compares essential schedule fields: type, date, time, status, skip reason\n *   - Ignores metadata fields like run_id and timestamps for audit preservation\n *   - Logs preservation decisions for audit trail transparency\n *   - Enables smart database updates that preserve history when appropriate\n *   - Critical for maintaining scheduler run tracking across multiple executions\n * \n * Usage Example:\n *   Called by smart_batch_insert_schedules to determine update necessity\n * \n * Error Cases:\n *   - None expected (pure comparison logic)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "find_existing_schedule",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "existing_schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_existing_schedules_for_comparison",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [get_existing_schedules_for_comparison]: Retrieves all existing schedules for intelligent comparison\n * \n * Purpose:\n *   Fetches existing email schedules from database to enable smart update logic\n *   that can detect unchanged content and preserve audit trails.\n * \n * Returns:\n *   Result containing list of existing_schedule_record or database error\n * \n * Business Logic:\n *   - Retrieves all pre-scheduled and scheduled email records\n *   - Excludes already sent/delivered emails to focus on updatable schedules\n *   - Provides data for smart comparison and audit trail preservation\n * \n * @performance @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "smart_batch_insert_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "current_run_id" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [smart_batch_insert_schedules]: Intelligent bulk schedule update with audit preservation\n * \n * Purpose:\n *   Flagship smart update function that minimizes database operations by detecting\n *   unchanged schedules and preserving their audit trails while updating only changed content.\n * \n * Parameters:\n *   - schedules: List of new email schedules to process\n *   - current_run_id: Run identifier for new schedules\n * \n * Returns:\n *   Result containing number of processed records or database error\n * \n * Business Logic:\n *   - Retrieves all existing schedules for intelligent comparison\n *   - Categorizes each schedule as new, changed, or unchanged\n *   - INSERT for new schedules with current run_id\n *   - UPDATE for changed schedules with current run_id and audit logging\n *   - PRESERVE unchanged schedules with original run_id for audit continuity\n *   - Uses single transaction for atomicity and performance\n *   - Provides detailed metrics for monitoring and optimization\n * \n * Usage Example:\n *   Primary database update function called by scheduling orchestration\n * \n * Error Cases:\n *   - Database errors with automatic rollback for data consistency\n *   - Comprehensive error logging for troubleshooting\n * \n * @business_rule @performance @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "smart_clear_outdated_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "new_schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "optimize_sqlite_for_bulk_inserts",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "restore_sqlite_safety",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "batch_insert_schedules_native",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [batch_insert_schedules_native]: Ultra high-performance batch insertion using prepared statements\n * \n * Purpose:\n *   Provides maximum performance bulk insertion using SQLite prepared statements\n *   with aggressive optimizations for large-scale email schedule operations.\n * \n * Parameters:\n *   - schedules: List of email schedules to insert\n * \n * Returns:\n *   Result containing number of inserted records or database error\n * \n * Business Logic:\n *   - Applies performance optimizations before insertion\n *   - Uses prepared statements for optimal SQL execution\n *   - Processes schedules in single transaction for atomicity\n *   - Converts schedule records to parameter arrays efficiently\n *   - Handles event date calculations for database storage\n *   - Restores safety settings after completion\n * \n * Usage Example:\n *   Used for large-scale schedule insertions during batch processing\n * \n * Error Cases:\n *   - Database errors with automatic safety restoration\n *   - Transaction rollback on any failure\n * \n * @performance @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "batch_insert_schedules_optimized",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "batch_insert_schedules_transactional",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "batch_insert_schedules_chunked",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "chunk_size" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "smart_update_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "current_run_id" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "update_schedules_legacy",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "_current_run_id" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "update_email_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "use_smart_update", "schedules", "current_run_id" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_sent_emails_for_followup",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "lookback_days" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_contact_interactions",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact_id", "since_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "ensure_performance_indexes",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "initialize_database",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "close_database",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_campaign_type_config_row",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_campaign_instance_row",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_contact_campaign_row",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_active_campaign_instances",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_campaign_type_config",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "campaign_type_name" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_contact_campaigns_for_instance",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "campaign_instance_id" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_all_contacts_for_campaign",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_targeting_list",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "targeting_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "contact_matches_targeting",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact", "campaign_instance" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_contacts_for_campaign",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "campaign_instance" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "birthday_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "before", "after", "use_month_start" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "effective_date_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "before", "after" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "year_round",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "no_exclusion",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "rules_for_state",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "has_exclusion_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "state" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_year_round_exclusion",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "state" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_window_for_email_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "state", "email_type" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "check_birthday_exclusion",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact", "check_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [check_birthday_exclusion]: Checks if a date falls within birthday exclusion window\n * \n * Purpose:\n *   Determines if email should be excluded due to state-specific birthday exclusion\n *   rules that prevent sending emails during sensitive periods around birthdays.\n * \n * Parameters:\n *   - contact: Contact record containing state and birthday information\n *   - check_date: Date to evaluate against exclusion window\n * \n * Returns:\n *   exclusion_result indicating exclusion status with reason and window end date\n * \n * Business Logic:\n *   - Requires both state and birthday data to apply exclusion\n *   - Looks up state-specific window configuration for birthday emails\n *   - Calculates next birthday anniversary relative to check date\n *   - Determines if check date falls within configured exclusion window\n *   - Provides specific exclusion reason including state information\n * \n * Usage Example:\n *   Called by check_exclusion_window as part of comprehensive exclusion evaluation\n * \n * Error Cases:\n *   - Returns NotExcluded if state or birthday data missing\n *   - Returns NotExcluded if no exclusion window configured for state\n * \n * @business_rule @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "check_effective_date_exclusion",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact", "check_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [check_effective_date_exclusion]: Checks if date falls within effective date exclusion window\n * \n * Purpose:\n *   Determines if email should be excluded due to state-specific effective date exclusion\n *   rules that prevent sending emails during sensitive periods around policy anniversaries.\n * \n * Parameters:\n *   - contact: Contact record containing state and effective_date information\n *   - check_date: Date to evaluate against exclusion window\n * \n * Returns:\n *   exclusion_result indicating exclusion status with reason and window end date\n * \n * Business Logic:\n *   - Requires both state and effective date data to apply exclusion\n *   - Looks up state-specific window configuration for effective date emails\n *   - Calculates next effective date anniversary relative to check date\n *   - Determines if check date falls within configured exclusion window\n *   - Provides specific exclusion reason including state information\n * \n * Usage Example:\n *   Called by check_exclusion_window as part of comprehensive exclusion evaluation\n * \n * Error Cases:\n *   - Returns NotExcluded if state or effective_date data missing\n *   - Returns NotExcluded if no exclusion window configured for state\n * \n * @business_rule @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "check_year_round_exclusion",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [check_year_round_exclusion]: Checks if contact's state has year-round email exclusion\n * \n * Purpose:\n *   Identifies states with permanent exclusion policies that prevent all anniversary\n *   emails regardless of date, typically due to regulatory restrictions.\n * \n * Parameters:\n *   - contact: Contact record containing state information\n * \n * Returns:\n *   exclusion_result indicating if state has year-round exclusion policy\n * \n * Business Logic:\n *   - Checks if contact's state is configured for year-round exclusion\n *   - Returns permanent exclusion with no end date for applicable states\n *   - Provides state-specific exclusion reason for audit purposes\n *   - Takes precedence over date-based exclusion windows\n * \n * Usage Example:\n *   Called first by check_exclusion_window to check for permanent exclusions\n * \n * Error Cases:\n *   - Returns NotExcluded if contact has no state information\n *   - Returns NotExcluded if state not configured for year-round exclusion\n * \n * @business_rule @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "check_exclusion_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact", "check_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [check_exclusion_window]: Main exclusion evaluation function for comprehensive rule checking\n * \n * Purpose:\n *   Orchestrates all exclusion rule evaluations in priority order to determine if an\n *   email should be excluded for a contact on a specific date.\n * \n * Parameters:\n *   - contact: Contact record with state, birthday, and effective_date information\n *   - check_date: Date to evaluate against all applicable exclusion rules\n * \n * Returns:\n *   exclusion_result with first applicable exclusion or NotExcluded if none apply\n * \n * Business Logic:\n *   - Evaluates exclusions in priority order (year-round, birthday, effective date)\n *   - Returns first exclusion match without checking subsequent rules\n *   - Provides comprehensive state-based compliance checking\n *   - Ensures regulatory compliance across all anniversary email types\n * \n * Usage Example:\n *   Called by should_skip_email and email scheduling functions for exclusion decisions\n * \n * Error Cases:\n *   - Returns NotExcluded if contact lacks required data for any rule evaluation\n *   - Handles missing state/date information gracefully\n * \n * @business_rule @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "should_skip_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact", "email_type", "check_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [should_skip_email]: Determines if specific email type should be skipped for contact\n * \n * Purpose:\n *   Makes final decision on email exclusion considering both exclusion rules and\n *   email type-specific policies like campaign respect_exclusions settings.\n * \n * Parameters:\n *   - contact: Contact record for exclusion rule evaluation\n *   - email_type: Type of email being considered (Campaign, Anniversary, etc.)\n *   - check_date: Scheduled date for the email\n * \n * Returns:\n *   Boolean indicating if email should be skipped (true) or sent (false)\n * \n * Business Logic:\n *   - Campaign emails with respect_exclusions=false bypass all exclusion rules\n *   - PostWindow anniversary emails always bypass exclusion rules\n *   - All other emails subject to standard exclusion window evaluation\n *   - Provides final gatekeeper for email sending decisions\n * \n * Usage Example:\n *   Called by email scheduling functions before creating email schedules\n * \n * Error Cases:\n *   - Defaults to exclusion rule evaluation for unknown email types\n *   - Returns false (don't skip) if exclusion evaluation returns NotExcluded\n * \n * @business_rule @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_post_window_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [get_post_window_date]: Calculates when post-exclusion window email can be sent\n * \n * Purpose:\n *   Determines the earliest date when a make-up email can be sent after exclusion\n *   windows end, enabling recovery of missed anniversary communications.\n * \n * Parameters:\n *   - contact: Contact record for exclusion window evaluation\n * \n * Returns:\n *   Option date representing earliest post-window send date, or None if no exclusions\n * \n * Business Logic:\n *   - Evaluates all current exclusion windows (birthday and effective date)\n *   - Finds the latest ending exclusion window to avoid conflicts\n *   - Adds one day buffer after window end for post-window email\n *   - Enables recovery communication after exclusion periods\n * \n * Usage Example:\n *   Called by calculate_post_window_emails to schedule make-up communications\n * \n * Error Cases:\n *   - Returns None if no active exclusion windows found\n *   - Handles missing exclusion window end dates gracefully\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year", "month", "day" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_date]: Smart constructor for validated date creation\n * \n * Purpose:\n *   Creates date tuples with comprehensive validation to prevent invalid dates\n *   from entering the system and causing calculation errors.\n * \n * Parameters:\n *   - year: Four-digit year value\n *   - month: Month value (1-12)\n *   - day: Day value (1-31, validated against month/year)\n * \n * Returns:\n *   Valid date tuple after successful validation\n * \n * Business Logic:\n *   - Validates date components against calendar rules\n *   - Handles leap year validation for February 29\n *   - Ensures month/day combinations are valid\n *   - Provides fail-fast validation for data integrity\n * \n * Usage Example:\n *   Used when creating dates from user input or database values\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid date combinations\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "hour", "minute", "second" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_time]: Smart constructor for validated time creation\n * \n * Purpose:\n *   Creates time tuples with validation to ensure time components are within\n *   valid ranges for consistent time handling across the system.\n * \n * Parameters:\n *   - hour: Hour value (0-23)\n *   - minute: Minute value (0-59)\n *   - second: Second value (0-59)\n * \n * Returns:\n *   Valid time tuple with timezone offset after successful validation\n * \n * Business Logic:\n *   - Validates time components against 24-hour clock rules\n *   - Uses UTC timezone offset for consistency\n *   - Provides foundation for scheduling time calculations\n * \n * Usage Example:\n *   Used when creating scheduled send times for email delivery\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid time values\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date", "time" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_datetime]: Combines date and time into datetime representation\n * \n * Purpose:\n *   Creates complete datetime objects for precise scheduling and timestamp\n *   operations while validating the date/time combination.\n * \n * Parameters:\n *   - date: Date tuple (year, month, day)\n *   - time: Time tuple ((hour, minute, second), timezone_offset)\n * \n * Returns:\n *   Ptime.t datetime representation for scheduling operations\n * \n * Business Logic:\n *   - Combines separate date and time components safely\n *   - Validates the complete datetime combination\n *   - Provides basis for precise scheduling calculations\n * \n * Usage Example:\n *   Used when creating specific send timestamps for email schedules\n * \n * Error Cases:\n *   - Fails for invalid date/time combinations\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "current_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [current_date]: Gets current system date for scheduling calculations\n * \n * Purpose:\n *   Provides current date as baseline for anniversary calculations and\n *   scheduling operations, ensuring consistent \"today\" reference.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   Current date tuple representing today's date\n * \n * Business Logic:\n *   - Uses system clock for current date determination\n *   - Provides consistent baseline for all date calculations\n *   - Ensures scheduling operates relative to actual current date\n * \n * Usage Example:\n *   Called by anniversary calculation and exclusion window functions\n * \n * Error Cases:\n *   - None expected (system clock should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "current_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [current_datetime]: Gets current system datetime for run tracking\n * \n * Purpose:\n *   Provides precise current timestamp for run identification, performance\n *   tracking, and audit trail creation in scheduling operations.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   Current Ptime.t datetime with full precision\n * \n * Business Logic:\n *   - Captures precise execution timestamp\n *   - Enables performance monitoring and run tracking\n *   - Provides audit trail for scheduling operations\n * \n * Usage Example:\n *   Used by generate_run_id and performance monitoring functions\n * \n * Error Cases:\n *   - None expected (system clock should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_leap_year",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_leap_year]: Determines if year is a leap year using robust logic\n * \n * Purpose:\n *   Accurately identifies leap years for February 29 handling in anniversary\n *   calculations and date validation operations.\n * \n * Parameters:\n *   - year: Four-digit year value to check\n * \n * Returns:\n *   Boolean indicating if year is a leap year\n * \n * Business Logic:\n *   - Uses Ptime's calendar logic for accurate leap year determination\n *   - Handles century years and other edge cases correctly\n *   - Critical for February 29 anniversary handling\n * \n * Usage Example:\n *   Used by next_anniversary for leap year date adjustments\n * \n * Error Cases:\n *   - None expected for valid year values\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "days_in_month",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year", "month" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [days_in_month]: Calculates number of days in specified month/year\n * \n * Purpose:\n *   Determines exact days in month accounting for leap years, providing\n *   foundation for date validation and calendar calculations.\n * \n * Parameters:\n *   - year: Year value for leap year context\n *   - month: Month value (1-12)\n * \n * Returns:\n *   Integer number of days in the specified month\n * \n * Business Logic:\n *   - Accounts for leap years in February calculations\n *   - Uses Ptime validation to find last valid day\n *   - Provides accurate month length for date operations\n * \n * Usage Example:\n *   Used internally for date validation and calendar operations\n * \n * Error Cases:\n *   - Returns fallback value for invalid month values\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "add_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date", "n" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [add_days]: Adds specified number of days to a date with robust arithmetic\n * \n * Purpose:\n *   Performs reliable date arithmetic that handles month boundaries, leap years,\n *   and year transitions correctly for scheduling calculations.\n * \n * Parameters:\n *   - date: Starting date tuple\n *   - n: Number of days to add (positive or negative)\n * \n * Returns:\n *   New date tuple after adding the specified days\n * \n * Business Logic:\n *   - Handles month and year boundaries correctly\n *   - Accounts for leap years in February calculations\n *   - Supports both forward and backward date arithmetic\n *   - Uses Ptime's robust calendar arithmetic internally\n * \n * Usage Example:\n *   Used for calculating send dates based on days_before settings\n * \n * Error Cases:\n *   - Fails on arithmetic overflow (extremely large day values)\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "compare_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "d1", "d2" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [compare_date]: Compares two dates with robust calendar logic\n * \n * Purpose:\n *   Provides reliable date comparison that handles edge cases and provides\n *   consistent ordering for scheduling and exclusion window operations.\n * \n * Parameters:\n *   - d1: First date tuple for comparison\n *   - d2: Second date tuple for comparison\n * \n * Returns:\n *   Integer indicating comparison result (-1, 0, 1)\n * \n * Business Logic:\n *   - Uses Ptime's robust comparison logic\n *   - Handles leap year and month boundary edge cases\n *   - Provides consistent ordering for date-based decisions\n * \n * Usage Example:\n *   Used by exclusion window and anniversary calculation functions\n * \n * Error Cases:\n *   - None expected for valid dates\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "diff_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "d1", "d2" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [diff_days]: Calculates difference between dates in days\n * \n * Purpose:\n *   Computes exact day difference between dates for spread calculations,\n *   exclusion window timing, and scheduling distribution.\n * \n * Parameters:\n *   - d1: First date tuple (subtracted from)\n *   - d2: Second date tuple (subtracted)\n * \n * Returns:\n *   Integer number of days difference (d1 - d2)\n * \n * Business Logic:\n *   - Calculates exact day difference using robust calendar arithmetic\n *   - Handles month boundaries and leap years correctly\n *   - Provides foundation for date range calculations\n * \n * Usage Example:\n *   Used by calculate_spread_date for campaign distribution\n * \n * Error Cases:\n *   - None expected for valid dates\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "next_anniversary",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "today", "event_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [next_anniversary]: Calculates next occurrence of anniversary date\n * \n * Purpose:\n *   Core anniversary logic that finds the next occurrence of a significant date\n *   relative to today, handling leap year edge cases for February 29 birthdays.\n * \n * Parameters:\n *   - today: Current date for calculation reference\n *   - event_date: Original anniversary date (birthday, effective date)\n * \n * Returns:\n *   Date tuple representing next anniversary occurrence\n * \n * Business Logic:\n *   - Tries current year first, then next year if already passed\n *   - Handles February 29 leap year birthdays by adjusting to February 28\n *   - Uses robust date comparison to determine if anniversary has passed\n *   - Critical for accurate anniversary email scheduling\n * \n * Usage Example:\n *   Used by calculate_anniversary_emails for birthday and effective date scheduling\n * \n * Error Cases:\n *   - None expected (handles leap year edge cases gracefully)\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "d" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_date]: Converts date tuple to standardized string format\n * \n * Purpose:\n *   Provides consistent string representation of dates for logging, database\n *   storage, and user interface display across the system.\n * \n * Parameters:\n *   - (year, month, day): Date tuple to format\n * \n * Returns:\n *   String in ISO 8601 format \"YYYY-MM-DD\"\n * \n * Business Logic:\n *   - Uses zero-padded format for consistent string length\n *   - Follows ISO 8601 standard for international compatibility\n *   - Provides readable format for logs and debugging\n *   - Ensures consistent date representation across components\n * \n * Usage Example:\n *   Used for logging, database queries, and debug output\n * \n * Error Cases:\n *   - None expected (all valid date tuples should format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "t" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_time]: Converts time tuple to standardized string format\n * \n * Purpose:\n *   Provides consistent string representation of times for logging and\n *   scheduling display, focusing on the time component only.\n * \n * Parameters:\n *   - ((hour, minute, second), _): Time tuple with timezone offset (ignored)\n * \n * Returns:\n *   String in 24-hour format \"HH:MM:SS\"\n * \n * Business Logic:\n *   - Uses 24-hour format for clarity and consistency\n *   - Zero-pads all components for fixed-width display\n *   - Ignores timezone offset for local time display\n *   - Provides readable format for schedule times\n * \n * Usage Example:\n *   Used for displaying scheduled send times in logs and interfaces\n * \n * Error Cases:\n *   - None expected (all valid time tuples should format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "dt" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_datetime]: Converts datetime to combined date/time string\n * \n * Purpose:\n *   Provides comprehensive string representation of complete datetime for\n *   precise logging, run tracking, and timestamp display.\n * \n * Parameters:\n *   - dt: Ptime.t datetime to format\n * \n * Returns:\n *   String combining date and time \"YYYY-MM-DD HH:MM:SS\"\n * \n * Business Logic:\n *   - Combines date and time formatting for complete timestamp\n *   - Uses space separator for readability\n *   - Provides precise timestamp for audit trails\n *   - Maintains consistency with component string formats\n * \n * Usage Example:\n *   Used for run ID generation and detailed logging timestamps\n * \n * Error Cases:\n *   - None expected (valid datetime should always format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [parse_date]: Parses ISO date string into date tuple with validation\n * \n * Purpose:\n *   Safely converts string date representations from external sources into\n *   validated date tuples for internal processing.\n * \n * Parameters:\n *   - date_str: String in \"YYYY-MM-DD\" format\n * \n * Returns:\n *   Valid date tuple after parsing and validation\n * \n * Business Logic:\n *   - Expects ISO 8601 format with dash separators\n *   - Validates parsed components using make_date validation\n *   - Provides safe conversion from external string data\n *   - Ensures invalid dates are rejected early\n * \n * Usage Example:\n *   Used when parsing dates from configuration files or API inputs\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid format or invalid dates\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "default",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "load_from_json",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "_json_string" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "load_from_file",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "_filename" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_checksum",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "data" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_contacts_checksum",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "log_scheduling_event",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "run_id", "event", "details" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "log_error",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "run_id", "error" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "zip_table",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [ "create" ],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "common_zip_mappings",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "load_zip_data",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "state_from_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip_code" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip_code" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_zip_info",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip_code" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "ensure_loaded",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "date_to_ptime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [date_to_ptime]: Internal helper to convert date tuple to Ptime.t for calculations\n * \n * Purpose:\n *   Safely converts date tuple format to Ptime.t for robust date arithmetic\n *   operations while providing clear error messages for invalid dates.\n * \n * Parameters:\n *   - (year, month, day): Date tuple with integer components\n * \n * Returns:\n *   Ptime.t representation suitable for date calculations\n * \n * Business Logic:\n *   - Validates date components during conversion\n *   - Leverages Ptime's robust calendar logic\n *   - Handles leap year validation automatically\n *   - Provides basis for all date arithmetic operations\n * \n * Usage Example:\n *   Used internally by add_days, compare_date, and anniversary calculations\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid dates (e.g., Feb 30)\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "ptime_to_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "ptime" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [ptime_to_date]: Internal helper to convert Ptime.t back to date tuple\n * \n * Purpose:\n *   Converts Ptime.t representation back to date tuple format for external use\n *   while maintaining precision and avoiding calculation errors.\n * \n * Parameters:\n *   - ptime: Ptime.t instance from date calculations\n * \n * Returns:\n *   Date tuple (year, month, day) matching system date format\n * \n * Business Logic:\n *   - Preserves exact date values from calculations\n *   - Maintains consistency with external date format\n *   - Ensures no precision loss during conversion\n * \n * Usage Example:\n *   Used internally by add_days and next_anniversary for result conversion\n * \n * Error Cases:\n *   - None expected (Ptime.t should always convert to valid date)\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year", "month", "day" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_date]: Smart constructor for validated date creation\n * \n * Purpose:\n *   Creates date tuples with comprehensive validation to prevent invalid dates\n *   from entering the system and causing calculation errors.\n * \n * Parameters:\n *   - year: Four-digit year value\n *   - month: Month value (1-12)\n *   - day: Day value (1-31, validated against month/year)\n * \n * Returns:\n *   Valid date tuple after successful validation\n * \n * Business Logic:\n *   - Validates date components against calendar rules\n *   - Handles leap year validation for February 29\n *   - Ensures month/day combinations are valid\n *   - Provides fail-fast validation for data integrity\n * \n * Usage Example:\n *   Used when creating dates from user input or database values\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid date combinations\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "hour", "minute", "second" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_time]: Smart constructor for validated time creation\n * \n * Purpose:\n *   Creates time tuples with validation to ensure time components are within\n *   valid ranges for consistent time handling across the system.\n * \n * Parameters:\n *   - hour: Hour value (0-23)\n *   - minute: Minute value (0-59)\n *   - second: Second value (0-59)\n * \n * Returns:\n *   Valid time tuple with timezone offset after successful validation\n * \n * Business Logic:\n *   - Validates time components against 24-hour clock rules\n *   - Uses UTC timezone offset for consistency\n *   - Provides foundation for scheduling time calculations\n * \n * Usage Example:\n *   Used when creating scheduled send times for email delivery\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid time values\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "make_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date", "time" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [make_datetime]: Combines date and time into datetime representation\n * \n * Purpose:\n *   Creates complete datetime objects for precise scheduling and timestamp\n *   operations while validating the date/time combination.\n * \n * Parameters:\n *   - date: Date tuple (year, month, day)\n *   - time: Time tuple ((hour, minute, second), timezone_offset)\n * \n * Returns:\n *   Ptime.t datetime representation for scheduling operations\n * \n * Business Logic:\n *   - Combines separate date and time components safely\n *   - Validates the complete datetime combination\n *   - Provides basis for precise scheduling calculations\n * \n * Usage Example:\n *   Used when creating specific send timestamps for email schedules\n * \n * Error Cases:\n *   - Fails for invalid date/time combinations\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "current_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [current_date]: Gets current system date for scheduling calculations\n * \n * Purpose:\n *   Provides current date as baseline for anniversary calculations and\n *   scheduling operations, ensuring consistent \"today\" reference.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   Current date tuple representing today's date\n * \n * Business Logic:\n *   - Uses system clock for current date determination\n *   - Provides consistent baseline for all date calculations\n *   - Ensures scheduling operates relative to actual current date\n * \n * Usage Example:\n *   Called by anniversary calculation and exclusion window functions\n * \n * Error Cases:\n *   - None expected (system clock should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "current_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [current_datetime]: Gets current system datetime for run tracking\n * \n * Purpose:\n *   Provides precise current timestamp for run identification, performance\n *   tracking, and audit trail creation in scheduling operations.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   Current Ptime.t datetime with full precision\n * \n * Business Logic:\n *   - Captures precise execution timestamp\n *   - Enables performance monitoring and run tracking\n *   - Provides audit trail for scheduling operations\n * \n * Usage Example:\n *   Used by generate_run_id and performance monitoring functions\n * \n * Error Cases:\n *   - None expected (system clock should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "add_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date", "n" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [add_days]: Adds specified number of days to a date with robust arithmetic\n * \n * Purpose:\n *   Performs reliable date arithmetic that handles month boundaries, leap years,\n *   and year transitions correctly for scheduling calculations.\n * \n * Parameters:\n *   - date: Starting date tuple\n *   - n: Number of days to add (positive or negative)\n * \n * Returns:\n *   New date tuple after adding the specified days\n * \n * Business Logic:\n *   - Handles month and year boundaries correctly\n *   - Accounts for leap years in February calculations\n *   - Supports both forward and backward date arithmetic\n *   - Uses Ptime's robust calendar arithmetic internally\n * \n * Usage Example:\n *   Used for calculating send dates based on days_before settings\n * \n * Error Cases:\n *   - Fails on arithmetic overflow (extremely large day values)\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "compare_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "d1", "d2" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [compare_date]: Compares two dates with robust calendar logic\n * \n * Purpose:\n *   Provides reliable date comparison that handles edge cases and provides\n *   consistent ordering for scheduling and exclusion window operations.\n * \n * Parameters:\n *   - d1: First date tuple for comparison\n *   - d2: Second date tuple for comparison\n * \n * Returns:\n *   Integer indicating comparison result (-1, 0, 1)\n * \n * Business Logic:\n *   - Uses Ptime's robust comparison logic\n *   - Handles leap year and month boundary edge cases\n *   - Provides consistent ordering for date-based decisions\n * \n * Usage Example:\n *   Used by exclusion window and anniversary calculation functions\n * \n * Error Cases:\n *   - None expected for valid dates\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "diff_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "d1", "d2" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [diff_days]: Calculates difference between dates in days\n * \n * Purpose:\n *   Computes exact day difference between dates for spread calculations,\n *   exclusion window timing, and scheduling distribution.\n * \n * Parameters:\n *   - d1: First date tuple (subtracted from)\n *   - d2: Second date tuple (subtracted)\n * \n * Returns:\n *   Integer number of days difference (d1 - d2)\n * \n * Business Logic:\n *   - Calculates exact day difference using robust calendar arithmetic\n *   - Handles month boundaries and leap years correctly\n *   - Provides foundation for date range calculations\n * \n * Usage Example:\n *   Used by calculate_spread_date for campaign distribution\n * \n * Error Cases:\n *   - None expected for valid dates\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_leap_year",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_leap_year]: Determines if year is a leap year using robust logic\n * \n * Purpose:\n *   Accurately identifies leap years for February 29 handling in anniversary\n *   calculations and date validation operations.\n * \n * Parameters:\n *   - year: Four-digit year value to check\n * \n * Returns:\n *   Boolean indicating if year is a leap year\n * \n * Business Logic:\n *   - Uses Ptime's calendar logic for accurate leap year determination\n *   - Handles century years and other edge cases correctly\n *   - Critical for February 29 anniversary handling\n * \n * Usage Example:\n *   Used by next_anniversary for leap year date adjustments\n * \n * Error Cases:\n *   - None expected for valid year values\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "days_in_month",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "year", "month" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [days_in_month]: Calculates number of days in specified month/year\n * \n * Purpose:\n *   Determines exact days in month accounting for leap years, providing\n *   foundation for date validation and calendar calculations.\n * \n * Parameters:\n *   - year: Year value for leap year context\n *   - month: Month value (1-12)\n * \n * Returns:\n *   Integer number of days in the specified month\n * \n * Business Logic:\n *   - Accounts for leap years in February calculations\n *   - Uses Ptime validation to find last valid day\n *   - Provides accurate month length for date operations\n * \n * Usage Example:\n *   Used internally for date validation and calendar operations\n * \n * Error Cases:\n *   - Returns fallback value for invalid month values\n * \n * @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "next_anniversary",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "today", "event_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [next_anniversary]: Calculates next occurrence of anniversary date\n * \n * Purpose:\n *   Core anniversary logic that finds the next occurrence of a significant date\n *   relative to today, handling leap year edge cases for February 29 birthdays.\n * \n * Parameters:\n *   - today: Current date for calculation reference\n *   - event_date: Original anniversary date (birthday, effective date)\n * \n * Returns:\n *   Date tuple representing next anniversary occurrence\n * \n * Business Logic:\n *   - Tries current year first, then next year if already passed\n *   - Handles February 29 leap year birthdays by adjusting to February 28\n *   - Uses robust date comparison to determine if anniversary has passed\n *   - Critical for accurate anniversary email scheduling\n * \n * Usage Example:\n *   Used by calculate_anniversary_emails for birthday and effective date scheduling\n * \n * Error Cases:\n *   - None expected (handles leap year edge cases gracefully)\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_date]: Converts date tuple to standardized string format\n * \n * Purpose:\n *   Provides consistent string representation of dates for logging, database\n *   storage, and user interface display across the system.\n * \n * Parameters:\n *   - (year, month, day): Date tuple to format\n * \n * Returns:\n *   String in ISO 8601 format \"YYYY-MM-DD\"\n * \n * Business Logic:\n *   - Uses zero-padded format for consistent string length\n *   - Follows ISO 8601 standard for international compatibility\n *   - Provides readable format for logs and debugging\n *   - Ensures consistent date representation across components\n * \n * Usage Example:\n *   Used for logging, database queries, and debug output\n * \n * Error Cases:\n *   - None expected (all valid date tuples should format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_time]: Converts time tuple to standardized string format\n * \n * Purpose:\n *   Provides consistent string representation of times for logging and\n *   scheduling display, focusing on the time component only.\n * \n * Parameters:\n *   - ((hour, minute, second), _): Time tuple with timezone offset (ignored)\n * \n * Returns:\n *   String in 24-hour format \"HH:MM:SS\"\n * \n * Business Logic:\n *   - Uses 24-hour format for clarity and consistency\n *   - Zero-pads all components for fixed-width display\n *   - Ignores timezone offset for local time display\n *   - Provides readable format for schedule times\n * \n * Usage Example:\n *   Used for displaying scheduled send times in logs and interfaces\n * \n * Error Cases:\n *   - None expected (all valid time tuples should format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_datetime",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "dt" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [string_of_datetime]: Converts datetime to combined date/time string\n * \n * Purpose:\n *   Provides comprehensive string representation of complete datetime for\n *   precise logging, run tracking, and timestamp display.\n * \n * Parameters:\n *   - dt: Ptime.t datetime to format\n * \n * Returns:\n *   String combining date and time \"YYYY-MM-DD HH:MM:SS\"\n * \n * Business Logic:\n *   - Combines date and time formatting for complete timestamp\n *   - Uses space separator for readability\n *   - Provides precise timestamp for audit trails\n *   - Maintains consistency with component string formats\n * \n * Usage Example:\n *   Used for run ID generation and detailed logging timestamps\n * \n * Error Cases:\n *   - None expected (valid datetime should always format correctly)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "date_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [parse_date]: Parses ISO date string into date tuple with validation\n * \n * Purpose:\n *   Safely converts string date representations from external sources into\n *   validated date tuples for internal processing.\n * \n * Parameters:\n *   - date_str: String in \"YYYY-MM-DD\" format\n * \n * Returns:\n *   Valid date tuple after parsing and validation\n * \n * Business Logic:\n *   - Expects ISO 8601 format with dash separators\n *   - Validates parsed components using make_date validation\n *   - Provides safe conversion from external string data\n *   - Ensures invalid dates are rejected early\n * \n * Usage Example:\n *   Used when parsing dates from configuration files or API inputs\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid format or invalid dates\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "parse_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "time_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [parse_time]: Parses time string into time tuple with validation\n * \n * Purpose:\n *   Safely converts string time representations from external sources into\n *   validated time tuples for scheduling operations.\n * \n * Parameters:\n *   - time_str: String in \"HH:MM:SS\" format\n * \n * Returns:\n *   Valid time tuple after parsing and validation\n * \n * Business Logic:\n *   - Expects 24-hour format with colon separators\n *   - Validates parsed components using make_time validation\n *   - Provides safe conversion from external string data\n *   - Ensures invalid times are rejected early\n * \n * Usage Example:\n *   Used when parsing send times from configuration files\n * \n * Error Cases:\n *   - Fails with descriptive message for invalid format or invalid times\n * \n * @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "with_fixed_time",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "fixed_time", "f" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [with_fixed_time]: Utility function for testing with controlled time\n * \n * Purpose:\n *   Provides mechanism for testing time-dependent functionality with fixed\n *   time values, enabling deterministic test results.\n * \n * Parameters:\n *   - fixed_time: Fixed time value for testing (currently acknowledged but not used)\n *   - f: Function to execute with controlled time context\n * \n * Returns:\n *   Result of executing function f\n * \n * Business Logic:\n *   - Acknowledges fixed time parameter for future implementation\n *   - Currently passes through to normal function execution\n *   - Provides foundation for comprehensive time mocking\n *   - Enables deterministic testing of scheduling logic\n * \n * Usage Example:\n *   Used in test suites to control time-dependent behavior\n * \n * Error Cases:\n *   - None expected (passes through underlying function errors)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "group_by_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [group_by_date]: Groups email schedules by date and computes daily statistics\n * \n * Purpose:\n *   Aggregates email schedules by scheduled date to create daily load statistics\n *   for analysis and load balancing decision making.\n * \n * Parameters:\n *   - schedules: List of email schedules to group and analyze\n * \n * Returns:\n *   List of daily_stats records, one for each date with scheduled emails\n * \n * Business Logic:\n *   - Uses hashtable for efficient date-based grouping\n *   - Accumulates email counts per date for load analysis\n *   - Creates detailed breakdown by email type for targeted balancing\n *   - Provides foundation for capacity planning and smoothing algorithms\n * \n * Usage Example:\n *   Called by load balancing functions to analyze current distribution\n * \n * Error Cases:\n *   - None expected (handles empty schedule lists gracefully)\n * \n * @performance @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_daily_cap",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_daily_cap]: Calculates daily email sending capacity limit\n * \n * Purpose:\n *   Determines maximum emails per day based on total contact count and\n *   configured percentage cap to prevent overwhelming email volumes.\n * \n * Parameters:\n *   - config: Load balancing configuration with percentage cap and contact count\n * \n * Returns:\n *   Integer representing maximum emails allowed per day\n * \n * Business Logic:\n *   - Applies percentage cap to total contact count\n *   - Ensures sustainable email sending volumes\n *   - Provides hard limit for daily email distribution\n *   - Supports capacity planning and resource management\n * \n * Usage Example:\n *   Called by cap enforcement functions to determine redistribution thresholds\n * \n * Error Cases:\n *   - None expected (arithmetic on validated configuration values)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_ed_soft_limit",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_ed_soft_limit]: Calculates soft limit for effective date emails per day\n * \n * Purpose:\n *   Determines target limit for effective date anniversary emails to prevent\n *   clustering and ensure balanced distribution across dates.\n * \n * Parameters:\n *   - config: Load balancing configuration with ED limit and percentage cap\n * \n * Returns:\n *   Integer representing soft limit for effective date emails per day\n * \n * Business Logic:\n *   - Uses configured ED daily soft limit as baseline\n *   - Caps at 30% of overall daily capacity\n *   - Prevents effective date emails from dominating daily volume\n *   - Enables targeted smoothing of anniversary clusters\n * \n * Usage Example:\n *   Called by effective date smoothing algorithms\n * \n * Error Cases:\n *   - None expected (arithmetic on validated configuration values)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_over_threshold",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "stats" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_over_threshold]: Checks if daily statistics exceed overage threshold\n * \n * Purpose:\n *   Determines if a day's email count exceeds the configured overage threshold\n *   requiring redistribution to maintain sustainable sending patterns.\n * \n * Parameters:\n *   - config: Load balancing configuration with overage threshold\n *   - stats: Daily statistics to evaluate\n * \n * Returns:\n *   Boolean indicating if day exceeds acceptable overage threshold\n * \n * Business Logic:\n *   - Applies overage threshold multiplier to daily cap\n *   - Identifies days requiring load redistribution\n *   - Triggers redistribution algorithms when threshold exceeded\n *   - Maintains flexibility while preventing extreme clustering\n * \n * Usage Example:\n *   Called by cap enforcement to identify redistribution candidates\n * \n * Error Cases:\n *   - None expected (comparison operations on valid statistics)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_ed_over_soft_limit",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "stats" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_ed_over_soft_limit]: Checks if effective date emails exceed soft limit\n * \n * Purpose:\n *   Determines if effective date anniversary emails on a day exceed the soft\n *   limit requiring targeted smoothing to prevent clustering.\n * \n * Parameters:\n *   - config: Load balancing configuration with ED soft limit\n *   - stats: Daily statistics to evaluate\n * \n * Returns:\n *   Boolean indicating if ED count exceeds soft limit threshold\n * \n * Business Logic:\n *   - Compares ED count against calculated soft limit\n *   - Identifies days needing effective date smoothing\n *   - Triggers targeted redistribution for anniversary clusters\n *   - Maintains balanced distribution of anniversary emails\n * \n * Usage Example:\n *   Called by smooth_effective_dates to identify smoothing candidates\n * \n * Error Cases:\n *   - None expected (comparison operations on valid statistics)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "apply_jitter",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [
          "original_date", "contact_id", "email_type", "window_days"
        ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [apply_jitter]: Applies deterministic jitter to redistribute email schedules\n * \n * Purpose:\n *   Calculates jittered date for email schedule using contact ID and email type\n *   as seed to ensure consistent but distributed scheduling across window.\n * \n * Parameters:\n *   - original_date: Original scheduled date for the email\n *   - contact_id: Contact identifier for deterministic jitter calculation\n *   - email_type: Email type for jitter algorithm differentiation\n *   - window_days: Size of redistribution window in days\n * \n * Returns:\n *   Result containing new jittered date or load balancing error\n * \n * Business Logic:\n *   - Uses deterministic algorithm for consistent redistribution\n *   - Leverages contact ID as seed for even distribution\n *   - Maintains email type context for algorithm tuning\n *   - Provides controlled randomization within specified window\n * \n * Usage Example:\n *   Called by smoothing algorithms to redistribute clustered emails\n * \n * Error Cases:\n *   - LoadBalancingError: Jitter calculation or date arithmetic failures\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "smooth_effective_dates",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [smooth_effective_dates]: Redistributes clustered effective date anniversary emails\n * \n * Purpose:\n *   Applies targeted smoothing algorithm to effective date emails that exceed\n *   soft limits, redistributing them across nearby dates to prevent clustering.\n * \n * Parameters:\n *   - schedules: List of all email schedules to process\n *   - config: Load balancing configuration with smoothing parameters\n * \n * Returns:\n *   List of schedules with effective date emails redistributed\n * \n * Business Logic:\n *   - Separates effective date emails from other types for targeted processing\n *   - Identifies days exceeding ED soft limits requiring smoothing\n *   - Applies jitter within configured window to redistribute clusters\n *   - Ensures redistributed dates are not in the past\n *   - Recombines smoothed schedules with unmodified schedules\n * \n * Usage Example:\n *   Called by distribute_schedules as first step in load balancing pipeline\n * \n * Error Cases:\n *   - Jitter application failures handled gracefully by keeping original dates\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "enforce_daily_caps",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": true,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [enforce_daily_caps]: Enforces hard daily limits by redistributing excess emails\n * \n * Purpose:\n *   Core cap enforcement algorithm that identifies overloaded days and redistributes\n *   emails to maintain daily sending limits while preserving priority ordering.\n * \n * Parameters:\n *   - schedules: List of email schedules to process\n *   - config: Load balancing configuration with daily caps and thresholds\n * \n * Returns:\n *   List of schedules with excess emails redistributed to maintain caps\n * \n * Business Logic:\n *   - Groups schedules by date and sorts chronologically\n *   - Identifies days exceeding overage threshold\n *   - Sorts schedules by priority to preserve important emails\n *   - Moves excess schedules to next available day or catch-up distribution\n *   - Maintains email priority ordering during redistribution\n * \n * Usage Example:\n *   Called by distribute_schedules after effective date smoothing\n * \n * Error Cases:\n *   - None expected (uses deterministic redistribution algorithms)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "distribute_catch_up",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": true,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [distribute_catch_up]: Distributes overflow emails across catch-up period\n * \n * Purpose:\n *   Handles emails that cannot be accommodated in normal scheduling by spreading\n *   them across a configured catch-up period to ensure delivery.\n * \n * Parameters:\n *   - schedules: List of overflow email schedules to redistribute\n *   - config: Load balancing configuration with catch-up spread parameters\n * \n * Returns:\n *   List of schedules with dates spread across catch-up period\n * \n * Business Logic:\n *   - Uses modulo operation for even distribution across catch-up days\n *   - Starts from tomorrow to avoid same-day delivery issues\n *   - Ensures all overflow emails eventually get scheduled\n *   - Provides predictable distribution pattern for capacity planning\n * \n * Usage Example:\n *   Called by enforce_daily_caps when no future capacity available\n * \n * Error Cases:\n *   - None expected (deterministic date calculation)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "distribute_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [distribute_schedules]: Main load balancing orchestration function\n * \n * Purpose:\n *   Coordinates complete load balancing pipeline applying smoothing algorithms\n *   and cap enforcement to create balanced email distribution.\n * \n * Parameters:\n *   - schedules: List of all email schedules to balance\n *   - config: Load balancing configuration with all parameters\n * \n * Returns:\n *   Result containing balanced schedules or load balancing error\n * \n * Business Logic:\n *   - Applies effective date smoothing first for targeted redistribution\n *   - Follows with daily cap enforcement for hard limit compliance\n *   - Uses pipeline approach for layered load balancing\n *   - Provides comprehensive error handling for all balancing operations\n * \n * Usage Example:\n *   Called by schedule_emails_streaming after all schedules generated\n * \n * Error Cases:\n *   - LoadBalancingError: Any failures in smoothing or cap enforcement\n * \n * @integration_point @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "analyze_distribution",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [analyze_distribution]: Analyzes email distribution for reporting and monitoring\n * \n * Purpose:\n *   Computes comprehensive statistics on email distribution across dates for\n *   capacity planning, performance monitoring, and load balancing assessment.\n * \n * Parameters:\n *   - schedules: List of email schedules to analyze\n * \n * Returns:\n *   distribution_analysis record with detailed statistics\n * \n * Business Logic:\n *   - Groups schedules by date for daily analysis\n *   - Calculates total volume and time span metrics\n *   - Computes distribution statistics (average, min, max, variance)\n *   - Provides insights for capacity planning and system optimization\n * \n * Usage Example:\n *   Called by get_scheduling_summary for comprehensive reporting\n * \n * Error Cases:\n *   - Handles empty schedule lists gracefully with zero values\n * \n * @integration_point @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_config",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [validate_config]: Validates load balancing configuration parameters\n * \n * Purpose:\n *   Ensures all load balancing configuration values are within valid ranges\n *   and logically consistent to prevent runtime errors and invalid behavior.\n * \n * Parameters:\n *   - config: Load balancing configuration to validate\n * \n * Returns:\n *   Result indicating validation success or configuration errors\n * \n * Business Logic:\n *   - Validates percentage cap is between 0 and 1\n *   - Ensures all day limits and windows are positive\n *   - Checks overage threshold is greater than 1.0\n *   - Accumulates all validation errors for comprehensive feedback\n * \n * Usage Example:\n *   Called before using configuration in load balancing operations\n * \n * Error Cases:\n *   - ConfigurationError: Invalid parameter values with detailed descriptions\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "default_config",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [default_config]: Creates default load balancing configuration\n * \n * Purpose:\n *   Provides sensible default configuration values for load balancing based on\n *   total contact count and proven operational parameters.\n * \n * Parameters:\n *   - total_contacts: Total number of contacts for capacity calculations\n * \n * Returns:\n *   load_balancing_config record with default values\n * \n * Business Logic:\n *   - Sets 7% daily sending cap for sustainable volume\n *   - Limits effective date emails to 15 per day\n *   - Uses 5-day smoothing window for anniversary redistribution\n *   - Provides 7-day catch-up period for overflow emails\n *   - Sets 20% overage threshold before redistribution\n * \n * Usage Example:\n *   Called by create_context to initialize load balancing configuration\n * \n * Error Cases:\n *   - None expected (uses validated default values)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "pre_window_buffer_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "in_exclusion_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "check_date", "window", "anchor_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_jitter",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact_id", "event_type", "year", "window_days" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "schedule_time_ct",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "hour", "minute" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_run_id",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [generate_run_id]: Generates a unique run identifier for the current scheduling execution\n * \n * Purpose:\n *   Creates a timestamp-based unique identifier for tracking a specific scheduler run.\n *   This ID is used to group all email schedules created during a single execution.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   String in format \"run_YYYYMMDD_HHMMSS\" representing the current timestamp\n * \n * Business Logic:\n *   - Uses current datetime to ensure uniqueness across runs\n *   - Provides audit trail for scheduled emails\n *   - Enables tracking and debugging of specific scheduler executions\n * \n * Usage Example:\n *   Called by create_context when initializing scheduling context\n * \n * Error Cases:\n *   - None expected (system time should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "create_context",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [create_context]: Creates a complete scheduling context for the current run\n * \n * Purpose:\n *   Initializes all necessary components for email scheduling including configuration,\n *   unique run ID, timing, and load balancing settings based on total contact count.\n * \n * Parameters:\n *   - config: Configuration object containing organization settings and email timing\n *   - total_contacts: Total number of contacts to be processed for load balancing calculations\n * \n * Returns:\n *   scheduling_context record with all initialized components\n * \n * Business Logic:\n *   - Generates unique run ID for audit trail\n *   - Captures start time for performance tracking\n *   - Configures load balancing based on expected volume\n *   - Ensures consistent context across all scheduling operations\n * \n * Usage Example:\n *   Called at the beginning of schedule_emails_streaming to initialize the session\n * \n * Error Cases:\n *   - None expected (all dependencies should be available)\n * \n * @integration_point @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_spread_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [
          "contact_id", "spread_start_date", "spread_end_date"
        ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_spread_date]: Calculates deterministic spread date for campaign emails\n * \n * Purpose:\n *   Distributes campaign emails evenly across a date range using contact ID as seed\n *   to ensure consistent but scattered scheduling for campaigns with spread_evenly=true.\n * \n * Parameters:\n *   - contact_id: Unique contact identifier used as distribution seed\n *   - spread_start_date: Start date of the spread period\n *   - spread_end_date: End date of the spread period\n * \n * Returns:\n *   Date within the spread range, deterministically calculated for the contact\n * \n * Business Logic:\n *   - Uses modulo operation on contact_id for deterministic distribution\n *   - Ensures each contact gets the same date on subsequent runs\n *   - Spreads load evenly across the available date range\n *   - Prevents clustering of campaign emails on specific dates\n * \n * Usage Example:\n *   Called by calculate_campaign_emails when campaign_config.spread_evenly is true\n * \n * Error Cases:\n *   - None expected (valid date range assumed to be provided)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "should_exclude_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "campaign_config", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [should_exclude_contact]: Determines if contact should be excluded from campaign\n * \n * Purpose:\n *   Evaluates organization-level and campaign-specific exclusion rules for failed\n *   underwriting contacts to ensure compliance with business policies.\n * \n * Parameters:\n *   - config: Configuration containing organization exclusion settings\n *   - campaign_config: Campaign-specific configuration including exclusion rules\n *   - contact: Contact record with failed_underwriting flag\n * \n * Returns:\n *   Option string - Some exclusion_reason if excluded, None if allowed\n * \n * Business Logic:\n *   - Checks global organization policy for failed underwriting exclusion\n *   - Allows AEP campaigns even for failed underwriting when globally excluded\n *   - Respects campaign-specific failed underwriting skip settings\n *   - Provides specific exclusion reasons for audit purposes\n * \n * Usage Example:\n *   Called by calculate_campaign_emails to filter contacts before scheduling\n * \n * Error Cases:\n *   - None expected (all inputs should be valid)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_contact_valid_for_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "campaign_instance", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_contact_valid_for_scheduling]: Validates contact eligibility for campaign scheduling\n * \n * Purpose:\n *   Determines if a contact has sufficient data for campaign scheduling based on\n *   email validity and location targeting requirements.\n * \n * Parameters:\n *   - config: Configuration containing organization policies\n *   - campaign_instance: Campaign instance with targeting constraints\n *   - contact: Contact record with email, zip_code, and state information\n * \n * Returns:\n *   Boolean indicating if contact is valid for this campaign\n * \n * Business Logic:\n *   - Requires valid email address for all campaigns\n *   - Checks if campaign has targeting constraints (states/carriers)\n *   - For targeted campaigns, requires location data (zip or state)\n *   - For universal campaigns, respects organization policy on missing location data\n *   - Handles \"ALL\" targeting as universal campaigns\n * \n * Usage Example:\n *   Called by calculate_campaign_emails to validate each contact\n * \n * Error Cases:\n *   - Returns false for contacts with missing required data\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "should_send_effective_date_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "_contact", "effective_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [should_send_effective_date_email]: Determines if effective date email should be sent\n * \n * Purpose:\n *   Evaluates whether sufficient time has passed since a contact's effective date\n *   to warrant sending anniversary emails based on organization configuration.\n * \n * Parameters:\n *   - config: Configuration containing effective_date_first_email_months setting\n *   - _contact: Contact record (currently unused but preserved for future use)\n *   - effective_date: The contact's insurance effective date\n * \n * Returns:\n *   Boolean indicating if effective date email should be sent\n * \n * Business Logic:\n *   - Calculates months elapsed since effective date\n *   - Compares against organization minimum threshold\n *   - Prevents emails too soon after policy inception\n *   - Ensures regulatory compliance with timing requirements\n * \n * Usage Example:\n *   Called by calculate_anniversary_emails before scheduling effective date anniversaries\n * \n * Error Cases:\n *   - None expected (date calculations should be valid)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_campaign_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "campaign_instance", "campaign_config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_campaign_emails]: Generates email schedules for a specific campaign instance\n * \n * Purpose:\n *   Core campaign scheduling logic that processes all eligible contacts for a campaign,\n *   applies business rules, handles exclusions, and creates email schedule records.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and load balancing settings\n *   - campaign_instance: Specific campaign instance with targeting and timing data\n *   - campaign_config: Campaign type configuration with rules and settings\n * \n * Returns:\n *   List of email_schedule records for all processed contacts in this campaign\n * \n * Business Logic:\n *   - Retrieves contacts based on campaign targeting (all contacts vs specific list)\n *   - Validates each contact for campaign eligibility\n *   - Applies organization and campaign exclusion rules\n *   - Calculates schedule dates (spread evenly vs regular timing)\n *   - Handles exclusion windows if campaign respects them\n *   - Creates appropriate schedule status (PreScheduled vs Skipped)\n * \n * Usage Example:\n *   Called by calculate_all_campaign_schedules for each active campaign instance\n * \n * Error Cases:\n *   - Database errors when retrieving contacts return empty lists\n *   - Invalid contacts are skipped with Skipped status\n * \n * @business_rule @data_flow @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_anniversary_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_anniversary_emails]: Generates anniversary email schedules for a contact\n * \n * Purpose:\n *   Creates email schedules for birthday and effective date anniversaries based on\n *   contact data and organization configuration, applying exclusion rules.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings\n *   - contact: Contact record with birthday, effective_date, and other data\n * \n * Returns:\n *   List of email_schedule records for anniversary emails (birthday and effective date)\n * \n * Business Logic:\n *   - Checks organization-level failed underwriting exclusion policy\n *   - Calculates next anniversary dates for birthday and effective date\n *   - Applies days_before configuration for email timing\n *   - Evaluates exclusion windows and creates appropriate status\n *   - Handles minimum time threshold for effective date emails\n *   - Creates audit trail with skip reasons when applicable\n * \n * Usage Example:\n *   Called by calculate_schedules_for_contact for each valid contact\n * \n * Error Cases:\n *   - Missing birthday/effective_date are handled gracefully (no emails created)\n *   - Exclusion window checks may result in Skipped status\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_post_window_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_post_window_emails]: Generates post-exclusion window email schedules\n * \n * Purpose:\n *   Creates email schedules for contacts who had emails skipped during exclusion\n *   windows, to be sent after the window period ends.\n * \n * Parameters:\n *   - context: Scheduling context with configuration settings\n *   - contact: Contact record that may need post-window emails\n * \n * Returns:\n *   List containing single post-window email schedule or empty list\n * \n * Business Logic:\n *   - Checks if organization enables post-window email feature\n *   - Retrieves calculated post-window date from exclusion logic\n *   - Creates single email schedule with PostWindow anniversary type\n *   - Uses standard send time and priority settings\n * \n * Usage Example:\n *   Called by calculate_schedules_for_contact for contacts with exclusion history\n * \n * Error Cases:\n *   - Returns empty list if organization disables feature\n *   - Returns empty list if no post-window date calculated\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_post_window_for_skipped",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "skipped_schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [generate_post_window_for_skipped]: Generates post-window emails for schedules skipped due to exclusions\n * \n * Purpose:\n *   Automatically creates post-window makeup emails for any schedules that were\n *   skipped due to exclusion windows during the current scheduling run.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings  \n *   - skipped_schedules: List of schedules that were skipped due to exclusions\n * \n * Returns:\n *   List of post-window email schedules for skipped emails\n * \n * Business Logic:\n *   - Filters skipped schedules for exclusion-related skip reasons\n *   - Calculates appropriate post-window dates for each skipped email\n *   - Creates makeup emails to be sent after exclusion window ends\n *   - Respects organization enable_post_window_emails setting\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_schedules_for_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_schedules_for_contact]: Generates all email schedules for a single contact\n * \n * Purpose:\n *   Core scheduling function that determines which emails should be sent to a contact\n *   and when, based on their anniversaries, state rules, and organization policies.\n * \n * Parameters:\n *   - context: Scheduling context containing config, run_id, and load balancing settings\n *   - contact: The contact record with birthday, effective_date, state, etc.\n * \n * Returns:\n *   Result containing list of email_schedule records or scheduler_error\n * \n * Business Logic:\n *   - Validates contact has required data for anniversary scheduling\n *   - Calculates anniversary-based emails (birthday, effective_date)\n *   - Applies state exclusion windows based on contact.state\n *   - Adds post-window emails if any were skipped\n *   - Respects organization configuration for timing and exclusions\n * \n * Usage Example:\n *   Called by process_contact_batch for each contact in batch processing\n * \n * Error Cases:\n *   - InvalidContactData: Missing required fields or validation failure\n *   - UnexpectedError: Unhandled exceptions during processing\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_all_campaign_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_all_campaign_schedules]: Generates schedules for all active campaigns\n * \n * Purpose:\n *   Orchestrates campaign email scheduling across all active campaign instances,\n *   retrieving configurations and handling errors at the campaign level.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and settings\n * \n * Returns:\n *   Tuple of (schedule_list, error_list) containing all campaign schedules and any errors\n * \n * Business Logic:\n *   - Retrieves all active campaign instances from database\n *   - For each instance, gets campaign type configuration\n *   - Calls calculate_campaign_emails for schedule generation\n *   - Accumulates all schedules and errors for return\n *   - Continues processing even if individual campaigns fail\n * \n * Usage Example:\n *   Called by schedule_emails_streaming to handle all campaign scheduling\n * \n * Error Cases:\n *   - Database errors accessing campaigns are collected and returned\n *   - Individual campaign failures don't stop overall processing\n * \n * @integration_point @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "process_contact_batch",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [process_contact_batch]: Processes a batch of contacts for anniversary email scheduling\n * \n * Purpose:\n *   Efficiently processes a subset of contacts in parallel, calculating schedules\n *   and collecting metrics for batch processing performance optimization.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and run information\n *   - contacts: List of contacts to process in this batch\n * \n * Returns:\n *   batch_result record containing schedules, metrics, and any errors encountered\n * \n * Business Logic:\n *   - Processes each contact individually for anniversary scheduling\n *   - Accumulates all generated schedules from the batch\n *   - Tracks processing metrics (scheduled, skipped, errors)\n *   - Continues processing even if individual contacts fail\n *   - Provides detailed statistics for monitoring and debugging\n * \n * Usage Example:\n *   Called by schedule_emails_streaming for each chunk of contacts\n * \n * Error Cases:\n *   - Individual contact errors are collected but don't stop batch processing\n *   - Returns comprehensive metrics even when some contacts fail\n * \n * @performance @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "manage_campaign_lifecycle",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "_context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [manage_campaign_lifecycle]: Manages campaign instance activation/deactivation based on dates\n * \n * Purpose:\n *   Automatically activates and deactivates campaign instances based on their\n *   active_start_date and active_end_date fields to ensure only current campaigns run.\n * \n * Parameters:\n *   - context: Scheduling context (unused but kept for consistency)\n * \n * Returns:\n *   Result indicating success or database error\n * \n * Business Logic:\n *   - Checks all campaign instances against current date\n *   - Activates instances whose start date has arrived\n *   - Deactivates instances whose end date has passed\n *   - Provides audit trail of lifecycle changes\n * \n * @business_rule @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_date_from_datetime_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "datetime_or_date_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [extract_date_from_datetime_string]: Safely extracts date from either date or datetime string\n * \n * Purpose:\n *   Handles database values that could be either date strings (YYYY-MM-DD) or \n *   datetime strings (YYYY-MM-DD HH:MM:SS) by extracting just the date portion.\n * \n * Parameters:\n *   - datetime_or_date_str: String that could be date or datetime format\n * \n * Returns:\n *   Date extracted from the string\n * \n * Business Logic:\n *   - If string contains space (datetime format), takes only the date part\n *   - If string has no space (date format), uses as-is\n *   - Handles COALESCE(actual_send_datetime, scheduled_send_date) safely\n * \n * @utility\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "determine_followup_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact_id", "since_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [determine_followup_type]: Determines the appropriate follow-up email type based on contact interactions\n * \n * Purpose:\n *   Analyzes contact engagement behavior to select the most appropriate follow-up email\n *   template based on clicks, health question answers, and medical conditions.\n * \n * Parameters:\n *   - contact_id: The contact ID to analyze\n *   - since_date: Date from which to analyze interactions (typically when initial email was sent)\n * \n * Returns:\n *   Result containing followup_type or scheduler_error\n * \n * Business Logic:\n *   - Checks for clicks and health question responses\n *   - Prioritizes follow-ups based on engagement level\n *   - Uses highest applicable follow-up type for contact behavior\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_followup_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_followup_emails]: Generates follow-up email schedules for eligible contacts\n * \n * Purpose:\n *   Identifies contacts who need follow-up emails based on their sent emails and\n *   creates appropriate follow-up schedules based on engagement behavior.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings\n * \n * Returns:\n *   List of email_schedule records for follow-up emails\n * \n * Business Logic:\n *   - Looks back for sent emails that need follow-ups\n *   - Analyzes contact engagement behavior for each email\n *   - Schedules follow-ups based on configured delay\n *   - Excludes contacts with existing follow-ups\n *   - Respects exclusion windows for follow-up scheduling\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "apply_frequency_limits",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [apply_frequency_limits]: Filters email schedules based on frequency limits\n * \n * Purpose:\n *   Applies frequency limit enforcement to a list of proposed email schedules,\n *   prioritizing higher priority emails when limits are exceeded.\n * \n * Parameters:\n *   - context: Scheduling context with frequency limit configuration\n *   - schedules: List of proposed email schedules to filter\n * \n * Returns:\n *   Tuple of (allowed_schedules, frequency_limited_schedules)\n * \n * Business Logic:\n *   - Groups schedules by contact_id for frequency checking\n *   - Sorts schedules by priority (lower number = higher priority)\n *   - For each email, counts both database emails AND current batch emails within period\n *   - Tracks previously-allowed emails from current batch to prevent batch-level limit violations\n *   - Allows highest priority emails within frequency limits\n *   - Marks excess emails as skipped due to frequency limits\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "resolve_campaign_conflicts",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [resolve_campaign_conflicts]: Resolves conflicts when multiple campaigns target same contact on same date\n * \n * Purpose:\n *   Handles priority conflicts when multiple campaign emails are scheduled for the\n *   same contact on the same date, keeping highest priority and skipping others.\n * \n * Parameters:\n *   - schedules: List of email schedules potentially containing conflicts\n * \n * Returns:\n *   Tuple of (resolved_schedules, conflicted_schedules)\n * \n * Business Logic:\n *   - Groups schedules by (contact_id, scheduled_date)\n *   - For each group, selects highest priority email (lowest number)\n *   - Marks other emails as skipped due to campaign conflicts\n *   - Preserves non-campaign emails (anniversary, follow-up) alongside campaigns\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "schedule_emails_streaming",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contacts", "config", "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [schedule_emails_streaming]: Main orchestration function for email scheduling\n * \n * Purpose:\n *   Top-level function that coordinates all email scheduling including anniversary\n *   emails, campaigns, load balancing, and provides comprehensive execution results.\n * \n * Parameters:\n *   - contacts: List of all contacts to process for anniversary emails\n *   - config: Configuration containing organization settings and timing\n *   - total_contacts: Total contact count for load balancing calculations\n * \n * Returns:\n *   Result containing batch_result with all schedules and metrics, or scheduler_error\n * \n * Business Logic:\n *   - Creates scheduling context with run ID and load balancing config\n *   - Processes campaign schedules first (independent of contact batching)\n *   - Processes anniversary contacts in configurable batch sizes\n *   - Combines anniversary and campaign schedules\n *   - Applies load balancing distribution to final schedules\n *   - Provides comprehensive metrics and error reporting\n * \n * Usage Example:\n *   Main entry point called by external scheduler with full contact list\n * \n * Error Cases:\n *   - Database errors, validation failures, unexpected exceptions\n *   - Returns detailed error information for debugging\n * \n * @integration_point @state_machine @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_scheduling_summary",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "result" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [get_scheduling_summary]: Generates human-readable summary of scheduling results\n * \n * Purpose:\n *   Creates formatted summary text with key metrics and distribution analysis\n *   for monitoring, logging, and administrative reporting purposes.\n * \n * Parameters:\n *   - result: batch_result containing schedules and processing metrics\n * \n * Returns:\n *   Formatted string with comprehensive scheduling statistics\n * \n * Business Logic:\n *   - Analyzes email distribution across dates for load balancing insights\n *   - Calculates averages, maximums, and variance for capacity planning\n *   - Provides contact processing metrics for performance monitoring\n *   - Formats data in human-readable format for reports and logs\n * \n * Usage Example:\n *   Called after schedule_emails_streaming completes for logging and reporting\n * \n * Error Cases:\n *   - None expected (operates on already validated result data)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      }
    ],
    "edges": [
      { "source": "db_handle", "target": "ref" },
      { "source": "db_path", "target": "ref" },
      { "source": "zip_table", "target": "create" }
    ],
    "entry_points": [
      "ensure_performance_indexes", "load_from_json", "string_of_datetime",
      "string_of_datetime", "find_existing_schedule", "empty_doc",
      "string_of_time", "string_of_time", "out_degree", "analyze_file",
      "load_from_file", "group_by_date", "string_of_anniversary_email",
      "in_degree", "diff_days", "diff_days", "next_anniversary",
      "next_anniversary", "generate_source_data",
      "generate_visualization_data", "export_complete_visualization",
      "followup_type_of_string", "is_contact_valid_for_scheduling",
      "calculate_all_campaign_schedules", "is_zip_code_valid",
      "get_contact_campaigns_for_instance", "string_of_schedule_status",
      "extract_doc_attribute", "current_date", "current_date",
      "validate_zip_code", "date_to_ptime", "calculate_ed_soft_limit",
      "state_of_string", "days_in_month", "days_in_month",
      "check_birthday_exclusion", "get_function_metrics",
      "get_scheduling_summary", "distribute_schedules",
      "resolve_campaign_conflicts", "execute_sql_no_result",
      "calculate_complexity_stats", "string_of_date", "string_of_date",
      "restore_sqlite_safety", "parse_campaign_instance_row", "parse_date",
      "log_error", "parse_date", "extract_function_doc",
      "create_enhanced_call_graph", "calculate_anniversary_emails",
      "get_db_connection", "calculate_spread_date",
      "batch_insert_schedules_native", "find_callers",
      "optimize_sqlite_for_bulk_inserts", "apply_jitter",
      "has_exclusion_window", "parse_contact_campaign_row",
      "distribute_catch_up", "apply_frequency_limits",
      "calculate_followup_emails", "birthday_window",
      "is_year_round_exclusion", "make_date", "make_date", "make_datetime",
      "make_datetime", "schedule_time_ct", "ensure_loaded",
      "parse_simple_doc_comment", "state_from_zip_code", "close_database",
      "get_window_for_email_type", "state_from_zip_code",
      "batch_insert_schedules_chunked", "extract_all_docs",
      "format_doc_as_html", "calculate_jitter", "save_visualization_data",
      "function_to_json", "extract_date_from_datetime_string",
      "analyze_structure_item", "current_datetime", "current_datetime",
      "smart_update_schedules", "default", "common_zip_mappings",
      "is_ed_over_soft_limit", "with_fixed_time", "validate_config",
      "generate_mermaid_diagram", "find_entry_points", "parse_time",
      "parse_doc_comment", "process_value_binding", "initialize_database",
      "get_function_info", "email_type_of_string", "make_time", "make_time",
      "calculate_schedules_for_contact", "get_total_contact_count",
      "update_email_schedules", "build_call_graph",
      "check_effective_date_exclusion", "load_zip_data", "extract_calls",
      "is_over_threshold", "should_send_effective_date_email",
      "analyze_files", "effective_date_window", "compare_date",
      "compare_date", "parse_contact_row", "get_post_window_date",
      "get_zip_info", "create_context", "calculate_post_window_emails",
      "calculate_complexity", "check_exclusion_window", "enforce_daily_caps",
      "validate_contact", "contact_matches_targeting", "in_exclusion_window",
      "generate_run_id", "smart_batch_insert_schedules",
      "get_contacts_for_campaign", "smooth_effective_dates",
      "format_doc_as_markdown", "get_active_campaign_instances",
      "manage_campaign_lifecycle", "string_of_state",
      "batch_insert_with_prepared_statement", "parse_datetime",
      "default_config", "priority_of_email_type", "pre_window_buffer_days",
      "anniversary_email_of_string", "is_leap_year", "add_days", "add_days",
      "is_leap_year", "determine_followup_type", "db_path", "set_db_path",
      "get_campaign_type_config", "calculate_contacts_checksum",
      "get_all_contacts", "year_round", "should_skip_email",
      "analyze_distribution", "batch_insert_schedules_transactional",
      "validate_email", "db_handle", "schedule_emails_streaming",
      "update_schedules_legacy", "ptime_to_date", "zip_table",
      "calculate_daily_cap", "rules_for_state", "should_exclude_contact",
      "get_sent_emails_for_followup", "is_valid_for_anniversary_scheduling",
      "get_dependencies", "string_of_db_error", "doc_to_json",
      "is_valid_zip_code", "extract_parameters",
      "parse_campaign_type_config_row", "parse_targeting_list",
      "string_of_email_type", "get_all_contacts_for_campaign",
      "no_exclusion", "string_of_error", "get_contacts_in_scheduling_window",
      "generate_post_window_for_skipped", "string_of_followup_type",
      "batch_insert_schedules_optimized", "calculate_checksum",
      "execute_sql_safe", "get_contact_interactions",
      "is_valid_for_campaign_scheduling", "clear_pre_scheduled_emails",
      "log_scheduling_event", "check_year_round_exclusion",
      "update_contact_state", "schedule_content_changed",
      "get_reverse_dependencies", "calculate_campaign_emails",
      "smart_clear_outdated_schedules", "find_callees",
      "is_valid_for_scheduling", "enhanced_call_graph_to_json",
      "process_contact_batch", "location_to_json",
      "get_existing_schedules_for_comparison"
    ],
    "cycles": [],
    "complexity_stats": { "min": 1, "max": 1, "average": 1.0 }
  },
  "diagrams": {
    "main": "%%{init: {\"flowchart\": {\"defaultRenderer\": \"elk\"}} }%%\nflowchart TD\n    empty_doc[\"empty_doc\"]:::low-complexity\n    parse_simple_doc_comment[\"parse_simple_doc_comment\"]:::low-complexity\n    parse_doc_comment[\"parse_doc_comment\"]:::low-complexity\n    extract_function_doc[\"extract_function_doc\"]:::low-complexity\n    extract_all_docs[\"extract_all_docs\"]:::low-complexity\n    format_doc_as_html[\"format_doc_as_html\"]:::low-complexity\n    format_doc_as_markdown[\"format_doc_as_markdown\"]:::low-complexity\n    build_call_graph[\"build_call_graph\"]:::low-complexity\n    in_degree[\"in_degree\"]:::low-complexity\n    out_degree[\"out_degree\"]:::low-complexity\n    find_entry_points[\"find_entry_points\"]:::low-complexity\n    calculate_complexity_stats[\"calculate_complexity_stats\"]:::low-complexity\n    create_enhanced_call_graph[\"create_enhanced_call_graph\"]:::low-complexity\n    get_dependencies[\"get_dependencies\"]:::low-complexity\n    get_reverse_dependencies[\"get_reverse_dependencies\"]:::low-complexity\n    get_function_metrics[\"get_function_metrics\"]:::low-complexity\n    location_to_json[\"location_to_json\"]:::low-complexity\n    doc_to_json[\"doc_to_json\"]:::low-complexity\n    function_to_json[\"function_to_json\"]:::low-complexity\n    enhanced_call_graph_to_json[\"enhanced_call_graph_to_json\"]:::low-complexity\n    generate_mermaid_diagram[\"generate_mermaid_diagram\"]:::low-complexity\n    generate_visualization_data[\"generate_visualization_data\"]:::low-complexity\n    save_visualization_data[\"save_visualization_data\"]:::low-complexity\n    generate_source_data[\"generate_source_data\"]:::low-complexity\n    export_complete_visualization[\"export_complete_visualization\"]:::low-complexity\n    extract_doc_attribute[\"extract_doc_attribute\"]:::low-complexity\n    calculate_complexity[\"calculate_complexity\"]:::low-complexity\n    extract_calls[\"extract_calls\"]:::low-complexity\n    extract_parameters[\"extract_parameters\"]:::low-complexity\n    process_value_binding[\"process_value_binding\"]:::low-complexity\n    analyze_structure_item[\"analyze_structure_item\"]:::low-complexity\n    analyze_file[\"analyze_file\"]:::low-complexity\n    analyze_files[\"analyze_files\"]:::low-complexity\n    find_callers[\"find_callers\"]:::low-complexity\n    find_callees[\"find_callees\"]:::low-complexity\n    get_function_info[\"get_function_info\"]:::low-complexity\n    state_of_string[\"state_of_string\"]:::low-complexity\n    string_of_state[\"string_of_state\"]:::low-complexity\n    string_of_anniversary_email[\"string_of_anniversary_email\"]:::low-complexity\n    anniversary_email_of_string[\"anniversary_email_of_string\"]:::low-complexity\n    string_of_followup_type[\"string_of_followup_type\"]:::low-complexity\n    followup_type_of_string[\"followup_type_of_string\"]:::low-complexity\n    string_of_email_type[\"string_of_email_type\"]:::low-complexity\n    email_type_of_string[\"email_type_of_string\"]:::low-complexity\n    string_of_schedule_status[\"string_of_schedule_status\"]:::low-complexity\n    priority_of_email_type[\"priority_of_email_type\"]:::low-complexity\n    string_of_error[\"string_of_error\"]:::low-complexity\n    validate_email[\"validate_email\"]:::low-complexity\n    validate_zip_code[\"validate_zip_code\"]:::low-complexity\n    state_from_zip_code[\"state_from_zip_code\"]:::low-complexity\n    validate_contact[\"validate_contact\"]:::low-complexity\n    update_contact_state[\"update_contact_state\"]:::low-complexity\n    is_valid_for_scheduling[\"is_valid_for_scheduling\"]:::low-complexity\n    is_valid_for_anniversary_scheduling[\"is_valid_for_anniversary_scheduling\"]:::low-complexity\n    is_valid_for_campaign_scheduling[\"is_valid_for_campaign_scheduling\"]:::low-complexity\n    is_zip_code_valid[\"is_zip_code_valid\"]:::low-complexity\n    db_handle[\"db_handle\"]:::low-complexity\n    db_path[\"db_path\"]:::low-complexity\n    set_db_path[\"set_db_path\"]:::low-complexity\n    string_of_db_error[\"string_of_db_error\"]:::low-complexity\n    get_db_connection[\"get_db_connection\"]:::low-complexity\n    parse_datetime[\"parse_datetime\"]:::low-complexity\n    execute_sql_safe[\"execute_sql_safe\"]:::low-complexity\n    execute_sql_no_result[\"execute_sql_no_result\"]:::low-complexity\n    batch_insert_with_prepared_statement[\"batch_insert_with_prepared_statement\"]:::low-complexity\n    parse_contact_row[\"parse_contact_row\"]:::low-complexity\n    get_contacts_in_scheduling_window[\"get_contacts_in_scheduling_window\"]:::low-complexity\n    get_all_contacts[\"get_all_contacts\"]:::low-complexity\n    get_total_contact_count[\"get_total_contact_count\"]:::low-complexity\n    clear_pre_scheduled_emails[\"clear_pre_scheduled_emails\"]:::low-complexity\n    schedule_content_changed[\"schedule_content_changed\"]:::low-complexity\n    find_existing_schedule[\"find_existing_schedule\"]:::low-complexity\n    get_existing_schedules_for_comparison[\"get_existing_schedules_for_comparison\"]:::low-complexity\n    smart_batch_insert_schedules[\"smart_batch_insert_schedules\"]:::low-complexity\n    smart_clear_outdated_schedules[\"smart_clear_outdated_schedules\"]:::low-complexity\n    optimize_sqlite_for_bulk_inserts[\"optimize_sqlite_for_bulk_inserts\"]:::low-complexity\n    restore_sqlite_safety[\"restore_sqlite_safety\"]:::low-complexity\n    batch_insert_schedules_native[\"batch_insert_schedules_native\"]:::low-complexity\n    batch_insert_schedules_optimized[\"batch_insert_schedules_optimized\"]:::low-complexity\n    batch_insert_schedules_transactional[\"batch_insert_schedules_transactional\"]:::low-complexity\n    batch_insert_schedules_chunked[\"batch_insert_schedules_chunked\"]:::low-complexity\n    smart_update_schedules[\"smart_update_schedules\"]:::low-complexity\n    update_schedules_legacy[\"update_schedules_legacy\"]:::low-complexity\n    update_email_schedules[\"update_email_schedules\"]:::low-complexity\n    get_sent_emails_for_followup[\"get_sent_emails_for_followup\"]:::low-complexity\n    get_contact_interactions[\"get_contact_interactions\"]:::low-complexity\n    ensure_performance_indexes[\"ensure_performance_indexes\"]:::low-complexity\n    initialize_database[\"initialize_database\"]:::low-complexity\n    close_database[\"close_database\"]:::low-complexity\n    parse_campaign_type_config_row[\"parse_campaign_type_config_row\"]:::low-complexity\n    parse_campaign_instance_row[\"parse_campaign_instance_row\"]:::low-complexity\n    parse_contact_campaign_row[\"parse_contact_campaign_row\"]:::low-complexity\n    get_active_campaign_instances[\"get_active_campaign_instances\"]:::low-complexity\n    get_campaign_type_config[\"get_campaign_type_config\"]:::low-complexity\n    get_contact_campaigns_for_instance[\"get_contact_campaigns_for_instance\"]:::low-complexity\n    get_all_contacts_for_campaign[\"get_all_contacts_for_campaign\"]:::low-complexity\n    parse_targeting_list[\"parse_targeting_list\"]:::low-complexity\n    contact_matches_targeting[\"contact_matches_targeting\"]:::low-complexity\n    get_contacts_for_campaign[\"get_contacts_for_campaign\"]:::low-complexity\n    birthday_window[\"birthday_window\"]:::low-complexity\n    effective_date_window[\"effective_date_window\"]:::low-complexity\n    year_round[\"year_round\"]:::low-complexity\n    no_exclusion[\"no_exclusion\"]:::low-complexity\n    rules_for_state[\"rules_for_state\"]:::low-complexity\n    has_exclusion_window[\"has_exclusion_window\"]:::low-complexity\n    is_year_round_exclusion[\"is_year_round_exclusion\"]:::low-complexity\n    get_window_for_email_type[\"get_window_for_email_type\"]:::low-complexity\n    check_birthday_exclusion[\"check_birthday_exclusion\"]:::low-complexity\n    check_effective_date_exclusion[\"check_effective_date_exclusion\"]:::low-complexity\n    check_year_round_exclusion[\"check_year_round_exclusion\"]:::low-complexity\n    check_exclusion_window[\"check_exclusion_window\"]:::low-complexity\n    should_skip_email[\"should_skip_email\"]:::low-complexity\n    get_post_window_date[\"get_post_window_date\"]:::low-complexity\n    make_date[\"make_date\"]:::low-complexity\n    make_time[\"make_time\"]:::low-complexity\n    make_datetime[\"make_datetime\"]:::low-complexity\n    current_date[\"current_date\"]:::low-complexity\n    current_datetime[\"current_datetime\"]:::low-complexity\n    is_leap_year[\"is_leap_year\"]:::low-complexity\n    days_in_month[\"days_in_month\"]:::low-complexity\n    add_days[\"add_days\"]:::low-complexity\n    compare_date[\"compare_date\"]:::low-complexity\n    diff_days[\"diff_days\"]:::low-complexity\n    next_anniversary[\"next_anniversary\"]:::low-complexity\n    string_of_date[\"string_of_date\"]:::low-complexity\n    string_of_time[\"string_of_time\"]:::low-complexity\n    string_of_datetime[\"string_of_datetime\"]:::low-complexity\n    parse_date[\"parse_date\"]:::low-complexity\n    default[\"default\"]:::low-complexity\n    load_from_json[\"load_from_json\"]:::low-complexity\n    load_from_file[\"load_from_file\"]:::low-complexity\n    calculate_checksum[\"calculate_checksum\"]:::low-complexity\n    calculate_contacts_checksum[\"calculate_contacts_checksum\"]:::low-complexity\n    log_scheduling_event[\"log_scheduling_event\"]:::low-complexity\n    log_error[\"log_error\"]:::low-complexity\n    zip_table[\"zip_table\"]:::low-complexity\n    common_zip_mappings[\"common_zip_mappings\"]:::low-complexity\n    load_zip_data[\"load_zip_data\"]:::low-complexity\n    state_from_zip_code[\"state_from_zip_code\"]:::low-complexity\n    is_valid_zip_code[\"is_valid_zip_code\"]:::low-complexity\n    get_zip_info[\"get_zip_info\"]:::low-complexity\n    ensure_loaded[\"ensure_loaded\"]:::low-complexity\n    date_to_ptime[\"date_to_ptime\"]:::low-complexity\n    ptime_to_date[\"ptime_to_date\"]:::low-complexity\n    make_date[\"make_date\"]:::low-complexity\n    make_time[\"make_time\"]:::low-complexity\n    make_datetime[\"make_datetime\"]:::low-complexity\n    current_date[\"current_date\"]:::low-complexity\n    current_datetime[\"current_datetime\"]:::low-complexity\n    add_days[\"add_days\"]:::low-complexity\n    compare_date[\"compare_date\"]:::low-complexity\n    diff_days[\"diff_days\"]:::low-complexity\n    is_leap_year[\"is_leap_year\"]:::low-complexity\n    days_in_month[\"days_in_month\"]:::low-complexity\n    next_anniversary[\"next_anniversary\"]:::low-complexity\n    string_of_date[\"string_of_date\"]:::low-complexity\n    string_of_time[\"string_of_time\"]:::low-complexity\n    string_of_datetime[\"string_of_datetime\"]:::low-complexity\n    parse_date[\"parse_date\"]:::low-complexity\n    parse_time[\"parse_time\"]:::low-complexity\n    with_fixed_time[\"with_fixed_time\"]:::low-complexity\n    group_by_date[\"group_by_date\"]:::low-complexity\n    calculate_daily_cap[\"calculate_daily_cap\"]:::low-complexity\n    calculate_ed_soft_limit[\"calculate_ed_soft_limit\"]:::low-complexity\n    is_over_threshold[\"is_over_threshold\"]:::low-complexity\n    is_ed_over_soft_limit[\"is_ed_over_soft_limit\"]:::low-complexity\n    apply_jitter[\"apply_jitter\"]:::low-complexity\n    smooth_effective_dates[\"smooth_effective_dates\"]:::low-complexity\n    enforce_daily_caps[\"enforce_daily_caps 🔄\"]:::low-complexity\n    distribute_catch_up[\"distribute_catch_up 🔄\"]:::low-complexity\n    distribute_schedules[\"distribute_schedules\"]:::low-complexity\n    analyze_distribution[\"analyze_distribution\"]:::low-complexity\n    validate_config[\"validate_config\"]:::low-complexity\n    default_config[\"default_config\"]:::low-complexity\n    pre_window_buffer_days[\"pre_window_buffer_days\"]:::low-complexity\n    in_exclusion_window[\"in_exclusion_window\"]:::low-complexity\n    calculate_jitter[\"calculate_jitter\"]:::low-complexity\n    schedule_time_ct[\"schedule_time_ct\"]:::low-complexity\n    generate_run_id[\"generate_run_id\"]:::low-complexity\n    create_context[\"create_context\"]:::low-complexity\n    calculate_spread_date[\"calculate_spread_date\"]:::low-complexity\n    should_exclude_contact[\"should_exclude_contact\"]:::low-complexity\n    is_contact_valid_for_scheduling[\"is_contact_valid_for_scheduling\"]:::low-complexity\n    should_send_effective_date_email[\"should_send_effective_date_email\"]:::low-complexity\n    calculate_campaign_emails[\"calculate_campaign_emails\"]:::low-complexity\n    calculate_anniversary_emails[\"calculate_anniversary_emails\"]:::low-complexity\n    calculate_post_window_emails[\"calculate_post_window_emails\"]:::low-complexity\n    generate_post_window_for_skipped[\"generate_post_window_for_skipped\"]:::low-complexity\n    calculate_schedules_for_contact[\"calculate_schedules_for_contact\"]:::low-complexity\n    calculate_all_campaign_schedules[\"calculate_all_campaign_schedules\"]:::low-complexity\n    process_contact_batch[\"process_contact_batch\"]:::low-complexity\n    manage_campaign_lifecycle[\"manage_campaign_lifecycle\"]:::low-complexity\n    extract_date_from_datetime_string[\"extract_date_from_datetime_string\"]:::low-complexity\n    determine_followup_type[\"determine_followup_type\"]:::low-complexity\n    calculate_followup_emails[\"calculate_followup_emails\"]:::low-complexity\n    apply_frequency_limits[\"apply_frequency_limits\"]:::low-complexity\n    resolve_campaign_conflicts[\"resolve_campaign_conflicts\"]:::low-complexity\n    schedule_emails_streaming[\"schedule_emails_streaming\"]:::low-complexity\n    get_scheduling_summary[\"get_scheduling_summary\"]:::low-complexity\n    click empty_doc callback \"Show details for empty_doc\"\n    click parse_simple_doc_comment callback \"Show details for parse_simple_doc_comment\"\n    click parse_doc_comment callback \"Show details for parse_doc_comment\"\n    click extract_function_doc callback \"Show details for extract_function_doc\"\n    click extract_all_docs callback \"Show details for extract_all_docs\"\n    click format_doc_as_html callback \"Show details for format_doc_as_html\"\n    click format_doc_as_markdown callback \"Show details for format_doc_as_markdown\"\n    click build_call_graph callback \"Show details for build_call_graph\"\n    click in_degree callback \"Show details for in_degree\"\n    click out_degree callback \"Show details for out_degree\"\n    click find_entry_points callback \"Show details for find_entry_points\"\n    click calculate_complexity_stats callback \"Show details for calculate_complexity_stats\"\n    click create_enhanced_call_graph callback \"Show details for create_enhanced_call_graph\"\n    click get_dependencies callback \"Show details for get_dependencies\"\n    click get_reverse_dependencies callback \"Show details for get_reverse_dependencies\"\n    click get_function_metrics callback \"Show details for get_function_metrics\"\n    click location_to_json callback \"Show details for location_to_json\"\n    click doc_to_json callback \"Show details for doc_to_json\"\n    click function_to_json callback \"Show details for function_to_json\"\n    click enhanced_call_graph_to_json callback \"Show details for enhanced_call_graph_to_json\"\n    click generate_mermaid_diagram callback \"Show details for generate_mermaid_diagram\"\n    click generate_visualization_data callback \"Show details for generate_visualization_data\"\n    click save_visualization_data callback \"Show details for save_visualization_data\"\n    click generate_source_data callback \"Show details for generate_source_data\"\n    click export_complete_visualization callback \"Show details for export_complete_visualization\"\n    click extract_doc_attribute callback \"Show details for extract_doc_attribute\"\n    click calculate_complexity callback \"Show details for calculate_complexity\"\n    click extract_calls callback \"Show details for extract_calls\"\n    click extract_parameters callback \"Show details for extract_parameters\"\n    click process_value_binding callback \"Show details for process_value_binding\"\n    click analyze_structure_item callback \"Show details for analyze_structure_item\"\n    click analyze_file callback \"Show details for analyze_file\"\n    click analyze_files callback \"Show details for analyze_files\"\n    click find_callers callback \"Show details for find_callers\"\n    click find_callees callback \"Show details for find_callees\"\n    click get_function_info callback \"Show details for get_function_info\"\n    click state_of_string callback \"Show details for state_of_string\"\n    click string_of_state callback \"Show details for string_of_state\"\n    click string_of_anniversary_email callback \"Show details for string_of_anniversary_email\"\n    click anniversary_email_of_string callback \"Show details for anniversary_email_of_string\"\n    click string_of_followup_type callback \"Show details for string_of_followup_type\"\n    click followup_type_of_string callback \"Show details for followup_type_of_string\"\n    click string_of_email_type callback \"Show details for string_of_email_type\"\n    click email_type_of_string callback \"Show details for email_type_of_string\"\n    click string_of_schedule_status callback \"Show details for string_of_schedule_status\"\n    click priority_of_email_type callback \"Show details for priority_of_email_type\"\n    click string_of_error callback \"Show details for string_of_error\"\n    click validate_email callback \"Show details for validate_email\"\n    click validate_zip_code callback \"Show details for validate_zip_code\"\n    click state_from_zip_code callback \"Show details for state_from_zip_code\"\n    click validate_contact callback \"Show details for validate_contact\"\n    click update_contact_state callback \"Show details for update_contact_state\"\n    click is_valid_for_scheduling callback \"Show details for is_valid_for_scheduling\"\n    click is_valid_for_anniversary_scheduling callback \"Show details for is_valid_for_anniversary_scheduling\"\n    click is_valid_for_campaign_scheduling callback \"Show details for is_valid_for_campaign_scheduling\"\n    click is_zip_code_valid callback \"Show details for is_zip_code_valid\"\n    click db_handle callback \"Show details for db_handle\"\n    click db_path callback \"Show details for db_path\"\n    click set_db_path callback \"Show details for set_db_path\"\n    click string_of_db_error callback \"Show details for string_of_db_error\"\n    click get_db_connection callback \"Show details for get_db_connection\"\n    click parse_datetime callback \"Show details for parse_datetime\"\n    click execute_sql_safe callback \"Show details for execute_sql_safe\"\n    click execute_sql_no_result callback \"Show details for execute_sql_no_result\"\n    click batch_insert_with_prepared_statement callback \"Show details for batch_insert_with_prepared_statement\"\n    click parse_contact_row callback \"Show details for parse_contact_row\"\n    click get_contacts_in_scheduling_window callback \"Show details for get_contacts_in_scheduling_window\"\n    click get_all_contacts callback \"Show details for get_all_contacts\"\n    click get_total_contact_count callback \"Show details for get_total_contact_count\"\n    click clear_pre_scheduled_emails callback \"Show details for clear_pre_scheduled_emails\"\n    click schedule_content_changed callback \"Show details for schedule_content_changed\"\n    click find_existing_schedule callback \"Show details for find_existing_schedule\"\n    click get_existing_schedules_for_comparison callback \"Show details for get_existing_schedules_for_comparison\"\n    click smart_batch_insert_schedules callback \"Show details for smart_batch_insert_schedules\"\n    click smart_clear_outdated_schedules callback \"Show details for smart_clear_outdated_schedules\"\n    click optimize_sqlite_for_bulk_inserts callback \"Show details for optimize_sqlite_for_bulk_inserts\"\n    click restore_sqlite_safety callback \"Show details for restore_sqlite_safety\"\n    click batch_insert_schedules_native callback \"Show details for batch_insert_schedules_native\"\n    click batch_insert_schedules_optimized callback \"Show details for batch_insert_schedules_optimized\"\n    click batch_insert_schedules_transactional callback \"Show details for batch_insert_schedules_transactional\"\n    click batch_insert_schedules_chunked callback \"Show details for batch_insert_schedules_chunked\"\n    click smart_update_schedules callback \"Show details for smart_update_schedules\"\n    click update_schedules_legacy callback \"Show details for update_schedules_legacy\"\n    click update_email_schedules callback \"Show details for update_email_schedules\"\n    click get_sent_emails_for_followup callback \"Show details for get_sent_emails_for_followup\"\n    click get_contact_interactions callback \"Show details for get_contact_interactions\"\n    click ensure_performance_indexes callback \"Show details for ensure_performance_indexes\"\n    click initialize_database callback \"Show details for initialize_database\"\n    click close_database callback \"Show details for close_database\"\n    click parse_campaign_type_config_row callback \"Show details for parse_campaign_type_config_row\"\n    click parse_campaign_instance_row callback \"Show details for parse_campaign_instance_row\"\n    click parse_contact_campaign_row callback \"Show details for parse_contact_campaign_row\"\n    click get_active_campaign_instances callback \"Show details for get_active_campaign_instances\"\n    click get_campaign_type_config callback \"Show details for get_campaign_type_config\"\n    click get_contact_campaigns_for_instance callback \"Show details for get_contact_campaigns_for_instance\"\n    click get_all_contacts_for_campaign callback \"Show details for get_all_contacts_for_campaign\"\n    click parse_targeting_list callback \"Show details for parse_targeting_list\"\n    click contact_matches_targeting callback \"Show details for contact_matches_targeting\"\n    click get_contacts_for_campaign callback \"Show details for get_contacts_for_campaign\"\n    click birthday_window callback \"Show details for birthday_window\"\n    click effective_date_window callback \"Show details for effective_date_window\"\n    click year_round callback \"Show details for year_round\"\n    click no_exclusion callback \"Show details for no_exclusion\"\n    click rules_for_state callback \"Show details for rules_for_state\"\n    click has_exclusion_window callback \"Show details for has_exclusion_window\"\n    click is_year_round_exclusion callback \"Show details for is_year_round_exclusion\"\n    click get_window_for_email_type callback \"Show details for get_window_for_email_type\"\n    click check_birthday_exclusion callback \"Show details for check_birthday_exclusion\"\n    click check_effective_date_exclusion callback \"Show details for check_effective_date_exclusion\"\n    click check_year_round_exclusion callback \"Show details for check_year_round_exclusion\"\n    click check_exclusion_window callback \"Show details for check_exclusion_window\"\n    click should_skip_email callback \"Show details for should_skip_email\"\n    click get_post_window_date callback \"Show details for get_post_window_date\"\n    click make_date callback \"Show details for make_date\"\n    click make_time callback \"Show details for make_time\"\n    click make_datetime callback \"Show details for make_datetime\"\n    click current_date callback \"Show details for current_date\"\n    click current_datetime callback \"Show details for current_datetime\"\n    click is_leap_year callback \"Show details for is_leap_year\"\n    click days_in_month callback \"Show details for days_in_month\"\n    click add_days callback \"Show details for add_days\"\n    click compare_date callback \"Show details for compare_date\"\n    click diff_days callback \"Show details for diff_days\"\n    click next_anniversary callback \"Show details for next_anniversary\"\n    click string_of_date callback \"Show details for string_of_date\"\n    click string_of_time callback \"Show details for string_of_time\"\n    click string_of_datetime callback \"Show details for string_of_datetime\"\n    click parse_date callback \"Show details for parse_date\"\n    click default callback \"Show details for default\"\n    click load_from_json callback \"Show details for load_from_json\"\n    click load_from_file callback \"Show details for load_from_file\"\n    click calculate_checksum callback \"Show details for calculate_checksum\"\n    click calculate_contacts_checksum callback \"Show details for calculate_contacts_checksum\"\n    click log_scheduling_event callback \"Show details for log_scheduling_event\"\n    click log_error callback \"Show details for log_error\"\n    click zip_table callback \"Show details for zip_table\"\n    click common_zip_mappings callback \"Show details for common_zip_mappings\"\n    click load_zip_data callback \"Show details for load_zip_data\"\n    click state_from_zip_code callback \"Show details for state_from_zip_code\"\n    click is_valid_zip_code callback \"Show details for is_valid_zip_code\"\n    click get_zip_info callback \"Show details for get_zip_info\"\n    click ensure_loaded callback \"Show details for ensure_loaded\"\n    click date_to_ptime callback \"Show details for date_to_ptime\"\n    click ptime_to_date callback \"Show details for ptime_to_date\"\n    click make_date callback \"Show details for make_date\"\n    click make_time callback \"Show details for make_time\"\n    click make_datetime callback \"Show details for make_datetime\"\n    click current_date callback \"Show details for current_date\"\n    click current_datetime callback \"Show details for current_datetime\"\n    click add_days callback \"Show details for add_days\"\n    click compare_date callback \"Show details for compare_date\"\n    click diff_days callback \"Show details for diff_days\"\n    click is_leap_year callback \"Show details for is_leap_year\"\n    click days_in_month callback \"Show details for days_in_month\"\n    click next_anniversary callback \"Show details for next_anniversary\"\n    click string_of_date callback \"Show details for string_of_date\"\n    click string_of_time callback \"Show details for string_of_time\"\n    click string_of_datetime callback \"Show details for string_of_datetime\"\n    click parse_date callback \"Show details for parse_date\"\n    click parse_time callback \"Show details for parse_time\"\n    click with_fixed_time callback \"Show details for with_fixed_time\"\n    click group_by_date callback \"Show details for group_by_date\"\n    click calculate_daily_cap callback \"Show details for calculate_daily_cap\"\n    click calculate_ed_soft_limit callback \"Show details for calculate_ed_soft_limit\"\n    click is_over_threshold callback \"Show details for is_over_threshold\"\n    click is_ed_over_soft_limit callback \"Show details for is_ed_over_soft_limit\"\n    click apply_jitter callback \"Show details for apply_jitter\"\n    click smooth_effective_dates callback \"Show details for smooth_effective_dates\"\n    click enforce_daily_caps callback \"Show details for enforce_daily_caps\"\n    click distribute_catch_up callback \"Show details for distribute_catch_up\"\n    click distribute_schedules callback \"Show details for distribute_schedules\"\n    click analyze_distribution callback \"Show details for analyze_distribution\"\n    click validate_config callback \"Show details for validate_config\"\n    click default_config callback \"Show details for default_config\"\n    click pre_window_buffer_days callback \"Show details for pre_window_buffer_days\"\n    click in_exclusion_window callback \"Show details for in_exclusion_window\"\n    click calculate_jitter callback \"Show details for calculate_jitter\"\n    click schedule_time_ct callback \"Show details for schedule_time_ct\"\n    click generate_run_id callback \"Show details for generate_run_id\"\n    click create_context callback \"Show details for create_context\"\n    click calculate_spread_date callback \"Show details for calculate_spread_date\"\n    click should_exclude_contact callback \"Show details for should_exclude_contact\"\n    click is_contact_valid_for_scheduling callback \"Show details for is_contact_valid_for_scheduling\"\n    click should_send_effective_date_email callback \"Show details for should_send_effective_date_email\"\n    click calculate_campaign_emails callback \"Show details for calculate_campaign_emails\"\n    click calculate_anniversary_emails callback \"Show details for calculate_anniversary_emails\"\n    click calculate_post_window_emails callback \"Show details for calculate_post_window_emails\"\n    click generate_post_window_for_skipped callback \"Show details for generate_post_window_for_skipped\"\n    click calculate_schedules_for_contact callback \"Show details for calculate_schedules_for_contact\"\n    click calculate_all_campaign_schedules callback \"Show details for calculate_all_campaign_schedules\"\n    click process_contact_batch callback \"Show details for process_contact_batch\"\n    click manage_campaign_lifecycle callback \"Show details for manage_campaign_lifecycle\"\n    click extract_date_from_datetime_string callback \"Show details for extract_date_from_datetime_string\"\n    click determine_followup_type callback \"Show details for determine_followup_type\"\n    click calculate_followup_emails callback \"Show details for calculate_followup_emails\"\n    click apply_frequency_limits callback \"Show details for apply_frequency_limits\"\n    click resolve_campaign_conflicts callback \"Show details for resolve_campaign_conflicts\"\n    click schedule_emails_streaming callback \"Show details for schedule_emails_streaming\"\n    click get_scheduling_summary callback \"Show details for get_scheduling_summary\"\n\n    classDef low-complexity fill:#d4edda,stroke:#28a745,stroke-width:2px\n    classDef medium-complexity fill:#fff3cd,stroke:#ffc107,stroke-width:2px\n    classDef high-complexity fill:#f8d7da,stroke:#dc3545,stroke-width:2px\n"
  },
  "metadata": {
    "total_functions": 199,
    "total_modules": 0,
    "entry_point_count": 199,
    "cycle_count": 0,
    "generated_at": "1749494385"
  }
}