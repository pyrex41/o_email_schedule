{
  "analysis": {
    "functions": [
      {
        "name": "group_by_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [group_by_date]: Groups email schedules by date and computes daily statistics\n * \n * Purpose:\n *   Aggregates email schedules by scheduled date to create daily load statistics\n *   for analysis and load balancing decision making.\n * \n * Parameters:\n *   - schedules: List of email schedules to group and analyze\n * \n * Returns:\n *   List of daily_stats records, one for each date with scheduled emails\n * \n * Business Logic:\n *   - Uses hashtable for efficient date-based grouping\n *   - Accumulates email counts per date for load analysis\n *   - Creates detailed breakdown by email type for targeted balancing\n *   - Provides foundation for capacity planning and smoothing algorithms\n * \n * Usage Example:\n *   Called by load balancing functions to analyze current distribution\n * \n * Error Cases:\n *   - None expected (handles empty schedule lists gracefully)\n * \n * @performance @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_daily_cap",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_daily_cap]: Calculates daily email sending capacity limit\n * \n * Purpose:\n *   Determines maximum emails per day based on total contact count and\n *   configured percentage cap to prevent overwhelming email volumes.\n * \n * Parameters:\n *   - config: Load balancing configuration with percentage cap and contact count\n * \n * Returns:\n *   Integer representing maximum emails allowed per day\n * \n * Business Logic:\n *   - Applies percentage cap to total contact count\n *   - Ensures sustainable email sending volumes\n *   - Provides hard limit for daily email distribution\n *   - Supports capacity planning and resource management\n * \n * Usage Example:\n *   Called by cap enforcement functions to determine redistribution thresholds\n * \n * Error Cases:\n *   - None expected (arithmetic on validated configuration values)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_ed_soft_limit",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_ed_soft_limit]: Calculates soft limit for effective date emails per day\n * \n * Purpose:\n *   Determines target limit for effective date anniversary emails to prevent\n *   clustering and ensure balanced distribution across dates.\n * \n * Parameters:\n *   - config: Load balancing configuration with ED limit and percentage cap\n * \n * Returns:\n *   Integer representing soft limit for effective date emails per day\n * \n * Business Logic:\n *   - Uses configured ED daily soft limit as baseline\n *   - Caps at 30% of overall daily capacity\n *   - Prevents effective date emails from dominating daily volume\n *   - Enables targeted smoothing of anniversary clusters\n * \n * Usage Example:\n *   Called by effective date smoothing algorithms\n * \n * Error Cases:\n *   - None expected (arithmetic on validated configuration values)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_over_threshold",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "stats" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_over_threshold]: Checks if daily statistics exceed overage threshold\n * \n * Purpose:\n *   Determines if a day's email count exceeds the configured overage threshold\n *   requiring redistribution to maintain sustainable sending patterns.\n * \n * Parameters:\n *   - config: Load balancing configuration with overage threshold\n *   - stats: Daily statistics to evaluate\n * \n * Returns:\n *   Boolean indicating if day exceeds acceptable overage threshold\n * \n * Business Logic:\n *   - Applies overage threshold multiplier to daily cap\n *   - Identifies days requiring load redistribution\n *   - Triggers redistribution algorithms when threshold exceeded\n *   - Maintains flexibility while preventing extreme clustering\n * \n * Usage Example:\n *   Called by cap enforcement to identify redistribution candidates\n * \n * Error Cases:\n *   - None expected (comparison operations on valid statistics)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_ed_over_soft_limit",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "stats" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_ed_over_soft_limit]: Checks if effective date emails exceed soft limit\n * \n * Purpose:\n *   Determines if effective date anniversary emails on a day exceed the soft\n *   limit requiring targeted smoothing to prevent clustering.\n * \n * Parameters:\n *   - config: Load balancing configuration with ED soft limit\n *   - stats: Daily statistics to evaluate\n * \n * Returns:\n *   Boolean indicating if ED count exceeds soft limit threshold\n * \n * Business Logic:\n *   - Compares ED count against calculated soft limit\n *   - Identifies days needing effective date smoothing\n *   - Triggers targeted redistribution for anniversary clusters\n *   - Maintains balanced distribution of anniversary emails\n * \n * Usage Example:\n *   Called by smooth_effective_dates to identify smoothing candidates\n * \n * Error Cases:\n *   - None expected (comparison operations on valid statistics)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "apply_jitter",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [
          "original_date", "contact_id", "email_type", "window_days"
        ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [apply_jitter]: Applies deterministic jitter to redistribute email schedules\n * \n * Purpose:\n *   Calculates jittered date for email schedule using contact ID and email type\n *   as seed to ensure consistent but distributed scheduling across window.\n * \n * Parameters:\n *   - original_date: Original scheduled date for the email\n *   - contact_id: Contact identifier for deterministic jitter calculation\n *   - email_type: Email type for jitter algorithm differentiation\n *   - window_days: Size of redistribution window in days\n * \n * Returns:\n *   Result containing new jittered date or load balancing error\n * \n * Business Logic:\n *   - Uses deterministic algorithm for consistent redistribution\n *   - Leverages contact ID as seed for even distribution\n *   - Maintains email type context for algorithm tuning\n *   - Provides controlled randomization within specified window\n * \n * Usage Example:\n *   Called by smoothing algorithms to redistribute clustered emails\n * \n * Error Cases:\n *   - LoadBalancingError: Jitter calculation or date arithmetic failures\n * \n * @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "smooth_effective_dates",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [smooth_effective_dates]: Redistributes clustered effective date anniversary emails\n * \n * Purpose:\n *   Applies targeted smoothing algorithm to effective date emails that exceed\n *   soft limits, redistributing them across nearby dates to prevent clustering.\n * \n * Parameters:\n *   - schedules: List of all email schedules to process\n *   - config: Load balancing configuration with smoothing parameters\n * \n * Returns:\n *   List of schedules with effective date emails redistributed\n * \n * Business Logic:\n *   - Separates effective date emails from other types for targeted processing\n *   - Identifies days exceeding ED soft limits requiring smoothing\n *   - Applies jitter within configured window to redistribute clusters\n *   - Ensures redistributed dates are not in the past\n *   - Recombines smoothed schedules with unmodified schedules\n * \n * Usage Example:\n *   Called by distribute_schedules as first step in load balancing pipeline\n * \n * Error Cases:\n *   - Jitter application failures handled gracefully by keeping original dates\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "enforce_daily_caps",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": true,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [enforce_daily_caps]: Enforces hard daily limits by redistributing excess emails\n * \n * Purpose:\n *   Core cap enforcement algorithm that identifies overloaded days and redistributes\n *   emails to maintain daily sending limits while preserving priority ordering.\n * \n * Parameters:\n *   - schedules: List of email schedules to process\n *   - config: Load balancing configuration with daily caps and thresholds\n * \n * Returns:\n *   List of schedules with excess emails redistributed to maintain caps\n * \n * Business Logic:\n *   - Groups schedules by date and sorts chronologically\n *   - Identifies days exceeding overage threshold\n *   - Sorts schedules by priority to preserve important emails\n *   - Moves excess schedules to next available day or catch-up distribution\n *   - Maintains email priority ordering during redistribution\n * \n * Usage Example:\n *   Called by distribute_schedules after effective date smoothing\n * \n * Error Cases:\n *   - None expected (uses deterministic redistribution algorithms)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "distribute_catch_up",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": true,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [distribute_catch_up]: Distributes overflow emails across catch-up period\n * \n * Purpose:\n *   Handles emails that cannot be accommodated in normal scheduling by spreading\n *   them across a configured catch-up period to ensure delivery.\n * \n * Parameters:\n *   - schedules: List of overflow email schedules to redistribute\n *   - config: Load balancing configuration with catch-up spread parameters\n * \n * Returns:\n *   List of schedules with dates spread across catch-up period\n * \n * Business Logic:\n *   - Uses modulo operation for even distribution across catch-up days\n *   - Starts from tomorrow to avoid same-day delivery issues\n *   - Ensures all overflow emails eventually get scheduled\n *   - Provides predictable distribution pattern for capacity planning\n * \n * Usage Example:\n *   Called by enforce_daily_caps when no future capacity available\n * \n * Error Cases:\n *   - None expected (deterministic date calculation)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "distribute_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules", "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [distribute_schedules]: Main load balancing orchestration function\n * \n * Purpose:\n *   Coordinates complete load balancing pipeline applying smoothing algorithms\n *   and cap enforcement to create balanced email distribution.\n * \n * Parameters:\n *   - schedules: List of all email schedules to balance\n *   - config: Load balancing configuration with all parameters\n * \n * Returns:\n *   Result containing balanced schedules or load balancing error\n * \n * Business Logic:\n *   - Applies effective date smoothing first for targeted redistribution\n *   - Follows with daily cap enforcement for hard limit compliance\n *   - Uses pipeline approach for layered load balancing\n *   - Provides comprehensive error handling for all balancing operations\n * \n * Usage Example:\n *   Called by schedule_emails_streaming after all schedules generated\n * \n * Error Cases:\n *   - LoadBalancingError: Any failures in smoothing or cap enforcement\n * \n * @integration_point @performance @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "analyze_distribution",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [analyze_distribution]: Analyzes email distribution for reporting and monitoring\n * \n * Purpose:\n *   Computes comprehensive statistics on email distribution across dates for\n *   capacity planning, performance monitoring, and load balancing assessment.\n * \n * Parameters:\n *   - schedules: List of email schedules to analyze\n * \n * Returns:\n *   distribution_analysis record with detailed statistics\n * \n * Business Logic:\n *   - Groups schedules by date for daily analysis\n *   - Calculates total volume and time span metrics\n *   - Computes distribution statistics (average, min, max, variance)\n *   - Provides insights for capacity planning and system optimization\n * \n * Usage Example:\n *   Called by get_scheduling_summary for comprehensive reporting\n * \n * Error Cases:\n *   - Handles empty schedule lists gracefully with zero values\n * \n * @integration_point @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_config",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [validate_config]: Validates load balancing configuration parameters\n * \n * Purpose:\n *   Ensures all load balancing configuration values are within valid ranges\n *   and logically consistent to prevent runtime errors and invalid behavior.\n * \n * Parameters:\n *   - config: Load balancing configuration to validate\n * \n * Returns:\n *   Result indicating validation success or configuration errors\n * \n * Business Logic:\n *   - Validates percentage cap is between 0 and 1\n *   - Ensures all day limits and windows are positive\n *   - Checks overage threshold is greater than 1.0\n *   - Accumulates all validation errors for comprehensive feedback\n * \n * Usage Example:\n *   Called before using configuration in load balancing operations\n * \n * Error Cases:\n *   - ConfigurationError: Invalid parameter values with detailed descriptions\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "default_config",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [default_config]: Creates default load balancing configuration\n * \n * Purpose:\n *   Provides sensible default configuration values for load balancing based on\n *   total contact count and proven operational parameters.\n * \n * Parameters:\n *   - total_contacts: Total number of contacts for capacity calculations\n * \n * Returns:\n *   load_balancing_config record with default values\n * \n * Business Logic:\n *   - Sets 7% daily sending cap for sustainable volume\n *   - Limits effective date emails to 15 per day\n *   - Uses 5-day smoothing window for anniversary redistribution\n *   - Provides 7-day catch-up period for overflow emails\n *   - Sets 20% overage threshold before redistribution\n * \n * Usage Example:\n *   Called by create_context to initialize load balancing configuration\n * \n * Error Cases:\n *   - None expected (uses validated default values)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "pre_window_buffer_days",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "in_exclusion_window",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "check_date", "window", "anchor_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_jitter",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact_id", "event_type", "year", "window_days" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "schedule_time_ct",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "hour", "minute" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_run_id",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [generate_run_id]: Generates a unique run identifier for the current scheduling execution\n * \n * Purpose:\n *   Creates a timestamp-based unique identifier for tracking a specific scheduler run.\n *   This ID is used to group all email schedules created during a single execution.\n * \n * Parameters:\n *   - None\n * \n * Returns:\n *   String in format \"run_YYYYMMDD_HHMMSS\" representing the current timestamp\n * \n * Business Logic:\n *   - Uses current datetime to ensure uniqueness across runs\n *   - Provides audit trail for scheduled emails\n *   - Enables tracking and debugging of specific scheduler executions\n * \n * Usage Example:\n *   Called by create_context when initializing scheduling context\n * \n * Error Cases:\n *   - None expected (system time should always be available)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "create_context",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [create_context]: Creates a complete scheduling context for the current run\n * \n * Purpose:\n *   Initializes all necessary components for email scheduling including configuration,\n *   unique run ID, timing, and load balancing settings based on total contact count.\n * \n * Parameters:\n *   - config: Configuration object containing organization settings and email timing\n *   - total_contacts: Total number of contacts to be processed for load balancing calculations\n * \n * Returns:\n *   scheduling_context record with all initialized components\n * \n * Business Logic:\n *   - Generates unique run ID for audit trail\n *   - Captures start time for performance tracking\n *   - Configures load balancing based on expected volume\n *   - Ensures consistent context across all scheduling operations\n * \n * Usage Example:\n *   Called at the beginning of schedule_emails_streaming to initialize the session\n * \n * Error Cases:\n *   - None expected (all dependencies should be available)\n * \n * @integration_point @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_spread_date",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [
          "contact_id", "spread_start_date", "spread_end_date"
        ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_spread_date]: Calculates deterministic spread date for campaign emails\n * \n * Purpose:\n *   Distributes campaign emails evenly across a date range using contact ID as seed\n *   to ensure consistent but scattered scheduling for campaigns with spread_evenly=true.\n * \n * Parameters:\n *   - contact_id: Unique contact identifier used as distribution seed\n *   - spread_start_date: Start date of the spread period\n *   - spread_end_date: End date of the spread period\n * \n * Returns:\n *   Date within the spread range, deterministically calculated for the contact\n * \n * Business Logic:\n *   - Uses modulo operation on contact_id for deterministic distribution\n *   - Ensures each contact gets the same date on subsequent runs\n *   - Spreads load evenly across the available date range\n *   - Prevents clustering of campaign emails on specific dates\n * \n * Usage Example:\n *   Called by calculate_campaign_emails when campaign_config.spread_evenly is true\n * \n * Error Cases:\n *   - None expected (valid date range assumed to be provided)\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "should_exclude_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "campaign_config", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [should_exclude_contact]: Determines if contact should be excluded from campaign\n * \n * Purpose:\n *   Evaluates organization-level and campaign-specific exclusion rules for failed\n *   underwriting contacts to ensure compliance with business policies.\n * \n * Parameters:\n *   - config: Configuration containing organization exclusion settings\n *   - campaign_config: Campaign-specific configuration including exclusion rules\n *   - contact: Contact record with failed_underwriting flag\n * \n * Returns:\n *   Option string - Some exclusion_reason if excluded, None if allowed\n * \n * Business Logic:\n *   - Checks global organization policy for failed underwriting exclusion\n *   - Allows AEP campaigns even for failed underwriting when globally excluded\n *   - Respects campaign-specific failed underwriting skip settings\n *   - Provides specific exclusion reasons for audit purposes\n * \n * Usage Example:\n *   Called by calculate_campaign_emails to filter contacts before scheduling\n * \n * Error Cases:\n *   - None expected (all inputs should be valid)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_contact_valid_for_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "campaign_instance", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [is_contact_valid_for_scheduling]: Validates contact eligibility for campaign scheduling\n * \n * Purpose:\n *   Determines if a contact has sufficient data for campaign scheduling based on\n *   email validity and location targeting requirements.\n * \n * Parameters:\n *   - config: Configuration containing organization policies\n *   - campaign_instance: Campaign instance with targeting constraints\n *   - contact: Contact record with email, zip_code, and state information\n * \n * Returns:\n *   Boolean indicating if contact is valid for this campaign\n * \n * Business Logic:\n *   - Requires valid email address for all campaigns\n *   - Checks if campaign has targeting constraints (states/carriers)\n *   - For targeted campaigns, requires location data (zip or state)\n *   - For universal campaigns, respects organization policy on missing location data\n *   - Handles \"ALL\" targeting as universal campaigns\n * \n * Usage Example:\n *   Called by calculate_campaign_emails to validate each contact\n * \n * Error Cases:\n *   - Returns false for contacts with missing required data\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "should_send_effective_date_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "config", "_contact", "effective_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [should_send_effective_date_email]: Determines if effective date email should be sent\n * \n * Purpose:\n *   Evaluates whether sufficient time has passed since a contact's effective date\n *   to warrant sending anniversary emails based on organization configuration.\n * \n * Parameters:\n *   - config: Configuration containing effective_date_first_email_months setting\n *   - _contact: Contact record (currently unused but preserved for future use)\n *   - effective_date: The contact's insurance effective date\n * \n * Returns:\n *   Boolean indicating if effective date email should be sent\n * \n * Business Logic:\n *   - Calculates months elapsed since effective date\n *   - Compares against organization minimum threshold\n *   - Prevents emails too soon after policy inception\n *   - Ensures regulatory compliance with timing requirements\n * \n * Usage Example:\n *   Called by calculate_anniversary_emails before scheduling effective date anniversaries\n * \n * Error Cases:\n *   - None expected (date calculations should be valid)\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_campaign_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "campaign_instance", "campaign_config" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_campaign_emails]: Generates email schedules for a specific campaign instance\n * \n * Purpose:\n *   Core campaign scheduling logic that processes all eligible contacts for a campaign,\n *   applies business rules, handles exclusions, and creates email schedule records.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and load balancing settings\n *   - campaign_instance: Specific campaign instance with targeting and timing data\n *   - campaign_config: Campaign type configuration with rules and settings\n * \n * Returns:\n *   List of email_schedule records for all processed contacts in this campaign\n * \n * Business Logic:\n *   - Retrieves contacts based on campaign targeting (all contacts vs specific list)\n *   - Validates each contact for campaign eligibility\n *   - Applies organization and campaign exclusion rules\n *   - Calculates schedule dates (spread evenly vs regular timing)\n *   - Handles exclusion windows if campaign respects them\n *   - Creates appropriate schedule status (PreScheduled vs Skipped)\n * \n * Usage Example:\n *   Called by calculate_all_campaign_schedules for each active campaign instance\n * \n * Error Cases:\n *   - Database errors when retrieving contacts return empty lists\n *   - Invalid contacts are skipped with Skipped status\n * \n * @business_rule @data_flow @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_anniversary_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_anniversary_emails]: Generates anniversary email schedules for a contact\n * \n * Purpose:\n *   Creates email schedules for birthday and effective date anniversaries based on\n *   contact data and organization configuration, applying exclusion rules.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings\n *   - contact: Contact record with birthday, effective_date, and other data\n * \n * Returns:\n *   List of email_schedule records for anniversary emails (birthday and effective date)\n * \n * Business Logic:\n *   - Checks organization-level failed underwriting exclusion policy\n *   - Calculates next anniversary dates for birthday and effective date\n *   - Applies days_before configuration for email timing\n *   - Evaluates exclusion windows and creates appropriate status\n *   - Handles minimum time threshold for effective date emails\n *   - Creates audit trail with skip reasons when applicable\n * \n * Usage Example:\n *   Called by calculate_schedules_for_contact for each valid contact\n * \n * Error Cases:\n *   - Missing birthday/effective_date are handled gracefully (no emails created)\n *   - Exclusion window checks may result in Skipped status\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_post_window_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_post_window_emails]: Generates post-exclusion window email schedules\n * \n * Purpose:\n *   Creates email schedules for contacts who had emails skipped during exclusion\n *   windows, to be sent after the window period ends.\n * \n * Parameters:\n *   - context: Scheduling context with configuration settings\n *   - contact: Contact record that may need post-window emails\n * \n * Returns:\n *   List containing single post-window email schedule or empty list\n * \n * Business Logic:\n *   - Checks if organization enables post-window email feature\n *   - Retrieves calculated post-window date from exclusion logic\n *   - Creates single email schedule with PostWindow anniversary type\n *   - Uses standard send time and priority settings\n * \n * Usage Example:\n *   Called by calculate_schedules_for_contact for contacts with exclusion history\n * \n * Error Cases:\n *   - Returns empty list if organization disables feature\n *   - Returns empty list if no post-window date calculated\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "generate_post_window_for_skipped",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "skipped_schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [generate_post_window_for_skipped]: Generates post-window emails for schedules skipped due to exclusions\n * \n * Purpose:\n *   Automatically creates post-window makeup emails for any schedules that were\n *   skipped due to exclusion windows during the current scheduling run.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings  \n *   - skipped_schedules: List of schedules that were skipped due to exclusions\n * \n * Returns:\n *   List of post-window email schedules for skipped emails\n * \n * Business Logic:\n *   - Filters skipped schedules for exclusion-related skip reasons\n *   - Calculates appropriate post-window dates for each skipped email\n *   - Creates makeup emails to be sent after exclusion window ends\n *   - Respects organization enable_post_window_emails setting\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_schedules_for_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_schedules_for_contact]: Generates all email schedules for a single contact\n * \n * Purpose:\n *   Core scheduling function that determines which emails should be sent to a contact\n *   and when, based on their anniversaries, state rules, and organization policies.\n * \n * Parameters:\n *   - context: Scheduling context containing config, run_id, and load balancing settings\n *   - contact: The contact record with birthday, effective_date, state, etc.\n * \n * Returns:\n *   Result containing list of email_schedule records or scheduler_error\n * \n * Business Logic:\n *   - Validates contact has required data for anniversary scheduling\n *   - Calculates anniversary-based emails (birthday, effective_date)\n *   - Applies state exclusion windows based on contact.state\n *   - Adds post-window emails if any were skipped\n *   - Respects organization configuration for timing and exclusions\n * \n * Usage Example:\n *   Called by process_contact_batch for each contact in batch processing\n * \n * Error Cases:\n *   - InvalidContactData: Missing required fields or validation failure\n *   - UnexpectedError: Unhandled exceptions during processing\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_all_campaign_schedules",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_all_campaign_schedules]: Generates schedules for all active campaigns\n * \n * Purpose:\n *   Orchestrates campaign email scheduling across all active campaign instances,\n *   retrieving configurations and handling errors at the campaign level.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and settings\n * \n * Returns:\n *   Tuple of (schedule_list, error_list) containing all campaign schedules and any errors\n * \n * Business Logic:\n *   - Retrieves all active campaign instances from database\n *   - For each instance, gets campaign type configuration\n *   - Calls calculate_campaign_emails for schedule generation\n *   - Accumulates all schedules and errors for return\n *   - Continues processing even if individual campaigns fail\n * \n * Usage Example:\n *   Called by schedule_emails_streaming to handle all campaign scheduling\n * \n * Error Cases:\n *   - Database errors accessing campaigns are collected and returned\n *   - Individual campaign failures don't stop overall processing\n * \n * @integration_point @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "process_contact_batch",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [process_contact_batch]: Processes a batch of contacts for anniversary email scheduling\n * \n * Purpose:\n *   Efficiently processes a subset of contacts in parallel, calculating schedules\n *   and collecting metrics for batch processing performance optimization.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and run information\n *   - contacts: List of contacts to process in this batch\n * \n * Returns:\n *   batch_result record containing schedules, metrics, and any errors encountered\n * \n * Business Logic:\n *   - Processes each contact individually for anniversary scheduling\n *   - Accumulates all generated schedules from the batch\n *   - Tracks processing metrics (scheduled, skipped, errors)\n *   - Continues processing even if individual contacts fail\n *   - Provides detailed statistics for monitoring and debugging\n * \n * Usage Example:\n *   Called by schedule_emails_streaming for each chunk of contacts\n * \n * Error Cases:\n *   - Individual contact errors are collected but don't stop batch processing\n *   - Returns comprehensive metrics even when some contacts fail\n * \n * @performance @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "manage_campaign_lifecycle",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "_context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [manage_campaign_lifecycle]: Manages campaign instance activation/deactivation based on dates\n * \n * Purpose:\n *   Automatically activates and deactivates campaign instances based on their\n *   active_start_date and active_end_date fields to ensure only current campaigns run.\n * \n * Parameters:\n *   - context: Scheduling context (unused but kept for consistency)\n * \n * Returns:\n *   Result indicating success or database error\n * \n * Business Logic:\n *   - Checks all campaign instances against current date\n *   - Activates instances whose start date has arrived\n *   - Deactivates instances whose end date has passed\n *   - Provides audit trail of lifecycle changes\n * \n * @business_rule @state_machine\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "extract_date_from_datetime_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "datetime_or_date_str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [extract_date_from_datetime_string]: Safely extracts date from either date or datetime string\n * \n * Purpose:\n *   Handles database values that could be either date strings (YYYY-MM-DD) or \n *   datetime strings (YYYY-MM-DD HH:MM:SS) by extracting just the date portion.\n * \n * Parameters:\n *   - datetime_or_date_str: String that could be date or datetime format\n * \n * Returns:\n *   Date extracted from the string\n * \n * Business Logic:\n *   - If string contains space (datetime format), takes only the date part\n *   - If string has no space (date format), uses as-is\n *   - Handles COALESCE(actual_send_datetime, scheduled_send_date) safely\n * \n * @utility\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "determine_followup_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact_id", "since_date" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [determine_followup_type]: Determines the appropriate follow-up email type based on contact interactions\n * \n * Purpose:\n *   Analyzes contact engagement behavior to select the most appropriate follow-up email\n *   template based on clicks, health question answers, and medical conditions.\n * \n * Parameters:\n *   - contact_id: The contact ID to analyze\n *   - since_date: Date from which to analyze interactions (typically when initial email was sent)\n * \n * Returns:\n *   Result containing followup_type or scheduler_error\n * \n * Business Logic:\n *   - Checks for clicks and health question responses\n *   - Prioritizes follow-ups based on engagement level\n *   - Uses highest applicable follow-up type for contact behavior\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "calculate_followup_emails",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [calculate_followup_emails]: Generates follow-up email schedules for eligible contacts\n * \n * Purpose:\n *   Identifies contacts who need follow-up emails based on their sent emails and\n *   creates appropriate follow-up schedules based on engagement behavior.\n * \n * Parameters:\n *   - context: Scheduling context with configuration and timing settings\n * \n * Returns:\n *   List of email_schedule records for follow-up emails\n * \n * Business Logic:\n *   - Looks back for sent emails that need follow-ups\n *   - Analyzes contact engagement behavior for each email\n *   - Schedules follow-ups based on configured delay\n *   - Excludes contacts with existing follow-ups\n *   - Respects exclusion windows for follow-up scheduling\n * \n * @business_rule @data_flow\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "apply_frequency_limits",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "context", "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [apply_frequency_limits]: Filters email schedules based on frequency limits\n * \n * Purpose:\n *   Applies frequency limit enforcement to a list of proposed email schedules,\n *   prioritizing higher priority emails when limits are exceeded.\n * \n * Parameters:\n *   - context: Scheduling context with frequency limit configuration\n *   - schedules: List of proposed email schedules to filter\n * \n * Returns:\n *   Tuple of (allowed_schedules, frequency_limited_schedules)\n * \n * Business Logic:\n *   - Groups schedules by contact_id for frequency checking\n *   - Sorts schedules by priority (lower number = higher priority)\n *   - For each email, counts both database emails AND current batch emails within period\n *   - Tracks previously-allowed emails from current batch to prevent batch-level limit violations\n *   - Allows highest priority emails within frequency limits\n *   - Marks excess emails as skipped due to frequency limits\n * \n * @business_rule @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "resolve_campaign_conflicts",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "schedules" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [resolve_campaign_conflicts]: Resolves conflicts when multiple campaigns target same contact on same date\n * \n * Purpose:\n *   Handles priority conflicts when multiple campaign emails are scheduled for the\n *   same contact on the same date, keeping highest priority and skipping others.\n * \n * Parameters:\n *   - schedules: List of email schedules potentially containing conflicts\n * \n * Returns:\n *   Tuple of (resolved_schedules, conflicted_schedules)\n * \n * Business Logic:\n *   - Groups schedules by (contact_id, scheduled_date)\n *   - For each group, selects highest priority email (lowest number)\n *   - Marks other emails as skipped due to campaign conflicts\n *   - Preserves non-campaign emails (anniversary, follow-up) alongside campaigns\n * \n * @business_rule\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "schedule_emails_streaming",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contacts", "config", "total_contacts" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [schedule_emails_streaming]: Main orchestration function for email scheduling\n * \n * Purpose:\n *   Top-level function that coordinates all email scheduling including anniversary\n *   emails, campaigns, load balancing, and provides comprehensive execution results.\n * \n * Parameters:\n *   - contacts: List of all contacts to process for anniversary emails\n *   - config: Configuration containing organization settings and timing\n *   - total_contacts: Total contact count for load balancing calculations\n * \n * Returns:\n *   Result containing batch_result with all schedules and metrics, or scheduler_error\n * \n * Business Logic:\n *   - Creates scheduling context with run ID and load balancing config\n *   - Processes campaign schedules first (independent of contact batching)\n *   - Processes anniversary contacts in configurable batch sizes\n *   - Combines anniversary and campaign schedules\n *   - Applies load balancing distribution to final schedules\n *   - Provides comprehensive metrics and error reporting\n * \n * Usage Example:\n *   Main entry point called by external scheduler with full contact list\n * \n * Error Cases:\n *   - Database errors, validation failures, unexpected exceptions\n *   - Returns detailed error information for debugging\n * \n * @integration_point @state_machine @performance\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "get_scheduling_summary",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "result" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": " * [get_scheduling_summary]: Generates human-readable summary of scheduling results\n * \n * Purpose:\n *   Creates formatted summary text with key metrics and distribution analysis\n *   for monitoring, logging, and administrative reporting purposes.\n * \n * Parameters:\n *   - result: batch_result containing schedules and processing metrics\n * \n * Returns:\n *   Formatted string with comprehensive scheduling statistics\n * \n * Business Logic:\n *   - Analyzes email distribution across dates for load balancing insights\n *   - Calculates averages, maximums, and variance for capacity planning\n *   - Provides contact processing metrics for performance monitoring\n *   - Formats data in human-readable format for reports and logs\n * \n * Usage Example:\n *   Called after schedule_emails_streaming completes for logging and reporting\n * \n * Error Cases:\n *   - None expected (operates on already validated result data)\n * \n * @integration_point\n ",
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "state_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_state",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_anniversary_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "anniversary_email_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_followup_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "followup_type_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_email_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "email_type_of_string",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "str" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_schedule_status",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "priority_of_email_type",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "string_of_error",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_email",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "email" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "state_from_zip_code",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip_code" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "validate_contact",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "update_contact_state",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_anniversary_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "org_config", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_valid_for_campaign_scheduling",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "org_config", "campaign_instance", "contact" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      },
      {
        "name": "is_zip_code_valid",
        "location": {
          "file": "unknown",
          "start_line": 1,
          "start_col": 0,
          "end_line": 1,
          "end_col": 0
        },
        "parameters": [ "zip" ],
        "complexity_score": 1,
        "calls": [],
        "is_recursive": false,
        "module_path": [],
        "documentation": {
          "summary": null,
          "description": null,
          "parameters": [],
          "returns": null,
          "examples": [],
          "see_also": [],
          "since": null,
          "deprecated": null,
          "raises": [],
          "tags": []
        },
        "file": "unknown"
      }
    ],
    "edges": [],
    "entry_points": [
      "email_type_of_string", "calculate_schedules_for_contact",
      "calculate_daily_cap", "apply_jitter", "should_exclude_contact",
      "group_by_date", "is_over_threshold", "distribute_catch_up",
      "should_send_effective_date_email", "apply_frequency_limits",
      "string_of_anniversary_email", "calculate_followup_emails",
      "is_valid_for_anniversary_scheduling", "create_context",
      "calculate_post_window_emails", "schedule_time_ct",
      "is_contact_valid_for_scheduling", "followup_type_of_string",
      "calculate_all_campaign_schedules", "enforce_daily_caps",
      "validate_contact", "is_zip_code_valid", "state_from_zip_code",
      "in_exclusion_window", "string_of_schedule_status",
      "string_of_email_type", "generate_run_id", "smooth_effective_dates",
      "generate_post_window_for_skipped", "string_of_error",
      "validate_zip_code", "manage_campaign_lifecycle",
      "string_of_followup_type", "calculate_jitter",
      "calculate_ed_soft_limit", "extract_date_from_datetime_string",
      "state_of_string", "string_of_state", "is_ed_over_soft_limit",
      "get_scheduling_summary", "is_valid_for_campaign_scheduling",
      "default_config", "priority_of_email_type", "distribute_schedules",
      "resolve_campaign_conflicts", "validate_config",
      "pre_window_buffer_days", "anniversary_email_of_string",
      "update_contact_state", "calculate_campaign_emails",
      "determine_followup_type", "calculate_anniversary_emails",
      "is_valid_for_scheduling", "analyze_distribution",
      "process_contact_batch", "calculate_spread_date",
      "schedule_emails_streaming", "validate_email"
    ],
    "cycles": [],
    "complexity_stats": { "min": 1, "max": 1, "average": 1.0 }
  },
  "diagrams": {
    "main": "%%{init: {\"flowchart\": {\"defaultRenderer\": \"elk\"}} }%%\nflowchart TD\n    group_by_date[\"group_by_date\"]:::low-complexity\n    calculate_daily_cap[\"calculate_daily_cap\"]:::low-complexity\n    calculate_ed_soft_limit[\"calculate_ed_soft_limit\"]:::low-complexity\n    is_over_threshold[\"is_over_threshold\"]:::low-complexity\n    is_ed_over_soft_limit[\"is_ed_over_soft_limit\"]:::low-complexity\n    apply_jitter[\"apply_jitter\"]:::low-complexity\n    smooth_effective_dates[\"smooth_effective_dates\"]:::low-complexity\n    enforce_daily_caps[\"enforce_daily_caps 🔄\"]:::low-complexity\n    distribute_catch_up[\"distribute_catch_up 🔄\"]:::low-complexity\n    distribute_schedules[\"distribute_schedules\"]:::low-complexity\n    analyze_distribution[\"analyze_distribution\"]:::low-complexity\n    validate_config[\"validate_config\"]:::low-complexity\n    default_config[\"default_config\"]:::low-complexity\n    pre_window_buffer_days[\"pre_window_buffer_days\"]:::low-complexity\n    in_exclusion_window[\"in_exclusion_window\"]:::low-complexity\n    calculate_jitter[\"calculate_jitter\"]:::low-complexity\n    schedule_time_ct[\"schedule_time_ct\"]:::low-complexity\n    generate_run_id[\"generate_run_id\"]:::low-complexity\n    create_context[\"create_context\"]:::low-complexity\n    calculate_spread_date[\"calculate_spread_date\"]:::low-complexity\n    should_exclude_contact[\"should_exclude_contact\"]:::low-complexity\n    is_contact_valid_for_scheduling[\"is_contact_valid_for_scheduling\"]:::low-complexity\n    should_send_effective_date_email[\"should_send_effective_date_email\"]:::low-complexity\n    calculate_campaign_emails[\"calculate_campaign_emails\"]:::low-complexity\n    calculate_anniversary_emails[\"calculate_anniversary_emails\"]:::low-complexity\n    calculate_post_window_emails[\"calculate_post_window_emails\"]:::low-complexity\n    generate_post_window_for_skipped[\"generate_post_window_for_skipped\"]:::low-complexity\n    calculate_schedules_for_contact[\"calculate_schedules_for_contact\"]:::low-complexity\n    calculate_all_campaign_schedules[\"calculate_all_campaign_schedules\"]:::low-complexity\n    process_contact_batch[\"process_contact_batch\"]:::low-complexity\n    manage_campaign_lifecycle[\"manage_campaign_lifecycle\"]:::low-complexity\n    extract_date_from_datetime_string[\"extract_date_from_datetime_string\"]:::low-complexity\n    determine_followup_type[\"determine_followup_type\"]:::low-complexity\n    calculate_followup_emails[\"calculate_followup_emails\"]:::low-complexity\n    apply_frequency_limits[\"apply_frequency_limits\"]:::low-complexity\n    resolve_campaign_conflicts[\"resolve_campaign_conflicts\"]:::low-complexity\n    schedule_emails_streaming[\"schedule_emails_streaming\"]:::low-complexity\n    get_scheduling_summary[\"get_scheduling_summary\"]:::low-complexity\n    state_of_string[\"state_of_string\"]:::low-complexity\n    string_of_state[\"string_of_state\"]:::low-complexity\n    string_of_anniversary_email[\"string_of_anniversary_email\"]:::low-complexity\n    anniversary_email_of_string[\"anniversary_email_of_string\"]:::low-complexity\n    string_of_followup_type[\"string_of_followup_type\"]:::low-complexity\n    followup_type_of_string[\"followup_type_of_string\"]:::low-complexity\n    string_of_email_type[\"string_of_email_type\"]:::low-complexity\n    email_type_of_string[\"email_type_of_string\"]:::low-complexity\n    string_of_schedule_status[\"string_of_schedule_status\"]:::low-complexity\n    priority_of_email_type[\"priority_of_email_type\"]:::low-complexity\n    string_of_error[\"string_of_error\"]:::low-complexity\n    validate_email[\"validate_email\"]:::low-complexity\n    validate_zip_code[\"validate_zip_code\"]:::low-complexity\n    state_from_zip_code[\"state_from_zip_code\"]:::low-complexity\n    validate_contact[\"validate_contact\"]:::low-complexity\n    update_contact_state[\"update_contact_state\"]:::low-complexity\n    is_valid_for_scheduling[\"is_valid_for_scheduling\"]:::low-complexity\n    is_valid_for_anniversary_scheduling[\"is_valid_for_anniversary_scheduling\"]:::low-complexity\n    is_valid_for_campaign_scheduling[\"is_valid_for_campaign_scheduling\"]:::low-complexity\n    is_zip_code_valid[\"is_zip_code_valid\"]:::low-complexity\n    click group_by_date callback \"Show details for group_by_date\"\n    click calculate_daily_cap callback \"Show details for calculate_daily_cap\"\n    click calculate_ed_soft_limit callback \"Show details for calculate_ed_soft_limit\"\n    click is_over_threshold callback \"Show details for is_over_threshold\"\n    click is_ed_over_soft_limit callback \"Show details for is_ed_over_soft_limit\"\n    click apply_jitter callback \"Show details for apply_jitter\"\n    click smooth_effective_dates callback \"Show details for smooth_effective_dates\"\n    click enforce_daily_caps callback \"Show details for enforce_daily_caps\"\n    click distribute_catch_up callback \"Show details for distribute_catch_up\"\n    click distribute_schedules callback \"Show details for distribute_schedules\"\n    click analyze_distribution callback \"Show details for analyze_distribution\"\n    click validate_config callback \"Show details for validate_config\"\n    click default_config callback \"Show details for default_config\"\n    click pre_window_buffer_days callback \"Show details for pre_window_buffer_days\"\n    click in_exclusion_window callback \"Show details for in_exclusion_window\"\n    click calculate_jitter callback \"Show details for calculate_jitter\"\n    click schedule_time_ct callback \"Show details for schedule_time_ct\"\n    click generate_run_id callback \"Show details for generate_run_id\"\n    click create_context callback \"Show details for create_context\"\n    click calculate_spread_date callback \"Show details for calculate_spread_date\"\n    click should_exclude_contact callback \"Show details for should_exclude_contact\"\n    click is_contact_valid_for_scheduling callback \"Show details for is_contact_valid_for_scheduling\"\n    click should_send_effective_date_email callback \"Show details for should_send_effective_date_email\"\n    click calculate_campaign_emails callback \"Show details for calculate_campaign_emails\"\n    click calculate_anniversary_emails callback \"Show details for calculate_anniversary_emails\"\n    click calculate_post_window_emails callback \"Show details for calculate_post_window_emails\"\n    click generate_post_window_for_skipped callback \"Show details for generate_post_window_for_skipped\"\n    click calculate_schedules_for_contact callback \"Show details for calculate_schedules_for_contact\"\n    click calculate_all_campaign_schedules callback \"Show details for calculate_all_campaign_schedules\"\n    click process_contact_batch callback \"Show details for process_contact_batch\"\n    click manage_campaign_lifecycle callback \"Show details for manage_campaign_lifecycle\"\n    click extract_date_from_datetime_string callback \"Show details for extract_date_from_datetime_string\"\n    click determine_followup_type callback \"Show details for determine_followup_type\"\n    click calculate_followup_emails callback \"Show details for calculate_followup_emails\"\n    click apply_frequency_limits callback \"Show details for apply_frequency_limits\"\n    click resolve_campaign_conflicts callback \"Show details for resolve_campaign_conflicts\"\n    click schedule_emails_streaming callback \"Show details for schedule_emails_streaming\"\n    click get_scheduling_summary callback \"Show details for get_scheduling_summary\"\n    click state_of_string callback \"Show details for state_of_string\"\n    click string_of_state callback \"Show details for string_of_state\"\n    click string_of_anniversary_email callback \"Show details for string_of_anniversary_email\"\n    click anniversary_email_of_string callback \"Show details for anniversary_email_of_string\"\n    click string_of_followup_type callback \"Show details for string_of_followup_type\"\n    click followup_type_of_string callback \"Show details for followup_type_of_string\"\n    click string_of_email_type callback \"Show details for string_of_email_type\"\n    click email_type_of_string callback \"Show details for email_type_of_string\"\n    click string_of_schedule_status callback \"Show details for string_of_schedule_status\"\n    click priority_of_email_type callback \"Show details for priority_of_email_type\"\n    click string_of_error callback \"Show details for string_of_error\"\n    click validate_email callback \"Show details for validate_email\"\n    click validate_zip_code callback \"Show details for validate_zip_code\"\n    click state_from_zip_code callback \"Show details for state_from_zip_code\"\n    click validate_contact callback \"Show details for validate_contact\"\n    click update_contact_state callback \"Show details for update_contact_state\"\n    click is_valid_for_scheduling callback \"Show details for is_valid_for_scheduling\"\n    click is_valid_for_anniversary_scheduling callback \"Show details for is_valid_for_anniversary_scheduling\"\n    click is_valid_for_campaign_scheduling callback \"Show details for is_valid_for_campaign_scheduling\"\n    click is_zip_code_valid callback \"Show details for is_zip_code_valid\"\n\n    classDef low-complexity fill:#d4edda,stroke:#28a745,stroke-width:2px\n    classDef medium-complexity fill:#fff3cd,stroke:#ffc107,stroke-width:2px\n    classDef high-complexity fill:#f8d7da,stroke:#dc3545,stroke-width:2px\n"
  },
  "metadata": {
    "total_functions": 58,
    "total_modules": 0,
    "entry_point_count": 58,
    "cycle_count": 0,
    "generated_at": "1749494408"
  }
}